{
  "openapi": "3.0.1",
  "info": {
    "title": "Dispatch Web Api",
    "contact": {
      "name": "Mint Innovations",
      "url": "https://mint-innovations.com/en/product/parcel-locker",
      "email": "sales@mint-innovations.com"
    },
    "license": {
      "name": "Get Mint Api License",
      "url": "https://mint-innovations.com"
    },
    "version": "3.9.64.9"
  },
  "paths": {
    "/api/Address/CreateAddressWithItems": {
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "Creates the address with items.",
        "requestBody": {
          "description": "The address.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressWithItems"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressWithItems"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressWithItems"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating address process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Address/UpdateAddressWithItems": {
      "put": {
        "tags": [
          "Address"
        ],
        "summary": "Updates the address with items.",
        "requestBody": {
          "description": "The address.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressWithItems"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressWithItems"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressWithItems"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating address process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Address/GetAddressesByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Gets the addresses by company identifier.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with addresses collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressWithItems"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressWithItems"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressWithItems"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Address/GetAddressesByMerchantId/{merchantId}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Gets the addresses by merchant identifier.",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "The merchant identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with addresses collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressWithItems"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressWithItems"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressWithItems"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Address/GetById/{id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Gets the by identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with address.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddressWithItems"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressWithItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressWithItems"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Advertisement/GetAllActiveByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "Advertisement"
        ],
        "summary": "Gets all active advertisements by companyId.",
        "description": "Method for getting active advertisements by companyId.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company advertisements successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyAdvertisement"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyAdvertisement"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyAdvertisement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No any company advertisements for return.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to get all company advertisements."
          }
        }
      }
    },
    "/api/Advertisement/SaveCompanyAdvertisement": {
      "post": {
        "tags": [
          "Advertisement"
        ],
        "summary": "Creates or updates advertisement.",
        "description": "Method for saving company advertisement.",
        "requestBody": {
          "description": "The advertisement model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAdvertisement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAdvertisement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAdvertisement"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Company advertisement successfully saved."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to save company advertisement.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to save company advertisement."
          }
        }
      }
    },
    "/api/Advertisement/DeleteCompanyAdvertisement/{advertisementId}": {
      "delete": {
        "tags": [
          "Advertisement"
        ],
        "summary": "Deletes company advertisement by advertisementId.",
        "description": "Method for deleting company advertisement by companyId.",
        "parameters": [
          {
            "name": "advertisementId",
            "in": "path",
            "description": "The advertisement identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Company advertisements successfully deleted."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to delete company advertisement.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to delete company advertisement."
          }
        }
      }
    },
    "/api/Advertisement/GetAdvertisementByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "Advertisement"
        ],
        "summary": "Gets advertisements by parcelLockerId.",
        "description": "Method for advertisements by parcelLockerId.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Parcel locker advertisements successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerAdvertisement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerAdvertisement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerAdvertisement"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No any parcel locker advertisements for return.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to get advertisements by parcelLockerId."
          }
        }
      }
    },
    "/api/Advertisement/SaveParcelLockerAdvertisement": {
      "post": {
        "tags": [
          "Advertisement"
        ],
        "summary": "Creates or updates parcel locker advertisement.",
        "description": "Method for saving parcel locker advertisement.",
        "requestBody": {
          "description": "The advertisement model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerAdvertisement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerAdvertisement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerAdvertisement"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Parcel locker advertisement successfully saved."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to save parcel locker advertisement.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to save parcel locker advertisement."
          }
        }
      }
    },
    "/api/Advertisement/GetVideoPreview/{advertisementId}": {
      "get": {
        "tags": [
          "Advertisement"
        ],
        "summary": "Gets company advertisement preview by advertisementId.",
        "description": "Method for getting company advertisement preview by companyId.",
        "parameters": [
          {
            "name": "advertisementId",
            "in": "path",
            "description": "The advertisement identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company advertisements preview successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAdvertisement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAdvertisement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAdvertisement"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No advertisement preview for return.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to get company advertisement preview by companyId."
          }
        }
      }
    },
    "/api/Advertisement/CheckIfParcelLockerAdvertisementExist/{advertisementId}": {
      "get": {
        "tags": [
          "Advertisement"
        ],
        "summary": "Checks if parcel locker advertisement exists by advertisementId.",
        "description": "Method for checking parcel locker advertisement existing by advertisementId.",
        "parameters": [
          {
            "name": "advertisementId",
            "in": "path",
            "description": "The advertisement identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Parcel locker advertisement found or not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to check parcel locker advertisement existing by advertisementId."
          }
        }
      }
    },
    "/api/ApiToken/RefreshToken/{companyId}": {
      "put": {
        "tags": [
          "ApiToken"
        ],
        "summary": "Refreshes the token.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, refresh token process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ApiToken/GetTokenForCompany/{companyId}": {
      "get": {
        "tags": [
          "ApiToken"
        ],
        "summary": "Gets the token for company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with token for company.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ApiToken/IsValidApiUserToken": {
      "get": {
        "tags": [
          "ApiToken"
        ],
        "summary": "Checks api user token.",
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ApiToken/GetCompaniesTokensInfo": {
      "get": {
        "tags": [
          "ApiToken"
        ],
        "summary": "Gets the token list for all companies.",
        "responses": {
          "200": {
            "description": "Successful status code with list of tokens for all companies.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTokenInfoModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTokenInfoModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyTokenInfoModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ApiToken/ReloadAllTokens": {
      "get": {
        "tags": [
          "ApiToken"
        ],
        "summary": "Gets the token list for all companies.",
        "responses": {
          "200": {
            "description": "Successful status code with list of tokens for all companies.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ApiToken/RefreshExternalAuthToken": {
      "put": {
        "tags": [
          "ApiToken"
        ],
        "summary": "Refreshes the external token.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshApiTokenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshApiTokenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshApiTokenModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, refresh token process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppToken/Create/{companyId}/{appType}": {
      "get": {
        "tags": [
          "AppToken"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "appType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/APPTypes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/AppToken/GetForCompany/{companyId}": {
      "get": {
        "tags": [
          "AppToken"
        ],
        "summary": "Gets the token for company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with token for company.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/AppToken/GetForCompanyByType/{companyId}/{appType}": {
      "get": {
        "tags": [
          "AppToken"
        ],
        "summary": "Gets the token for company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "appType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/APPTypes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with token for company.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/AppToken/RefreshToken/{refreshToken}": {
      "get": {
        "tags": [
          "AppToken"
        ],
        "summary": "Refreshes the token.",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTokenModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, refresh token process failed."
          }
        }
      }
    },
    "/api/AppToken/Login/{userId}": {
      "get": {
        "tags": [
          "AppToken"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Archive/Parcel/{parcelId}": {
      "get": {
        "tags": [
          "ArchiveParcel"
        ],
        "summary": "Get Archive Parcel by Parcel ID",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "Parcel ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Archive/Parcel/{parcelId}/Details": {
      "get": {
        "tags": [
          "ArchiveParcel"
        ],
        "summary": "Get Parcel Details by Parcel ID",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "Parcel ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Archive/Parcel/GetParcelByParcelNumber/{parcelNumber}": {
      "get": {
        "tags": [
          "ArchiveParcel"
        ],
        "summary": "Get Parcel by Parcel Number",
        "parameters": [
          {
            "name": "parcelNumber",
            "in": "path",
            "description": "Parcel Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Archive/Parcel/GetAllByFilter": {
      "post": {
        "tags": [
          "ArchiveParcel"
        ],
        "summary": "Get Parcels by Filter",
        "requestBody": {
          "description": "Parcel Filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelSimpleList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelSimpleList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelSimpleList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login to Dispatch by login model.",
        "description": "Method for user login to Dispatch by login model. Method returns authentication token when login has been success.",
        "requestBody": {
          "description": "The login model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "example": {"email":"admin@modern.com","password":"Aa111,","rememberMe":false,"ipAddress":null}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "example": {"email":"admin@modern.com","password":"Aa111,","rememberMe":false,"ipAddress":null}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "example": {"email":"admin@modern.com","password":"Aa111,","rememberMe":false,"ipAddress":null}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully login to Dispatch and returned authentication token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, login process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Auth/SendTwoFactorCode": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send two factor code and return message provider type.",
        "requestBody": {
          "description": "The user email.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with message provider type.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TypeMessageEnum"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeMessageEnum"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeMessageEnum"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Auth/LoginWithTwoFactor/{providerType}/{code}": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login to Dispatch with two factor authorization by login model.",
        "parameters": [
          {
            "name": "providerType",
            "in": "path",
            "description": "The message provider type.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TypeMessageEnum"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The code for validation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The login model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "example": {"email":"admin@modern.com","password":"Aa111,","rememberMe":false,"ipAddress":null}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "example": {"email":"admin@modern.com","password":"Aa111,","rememberMe":false,"ipAddress":null}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "example": {"email":"admin@modern.com","password":"Aa111,","rememberMe":false,"ipAddress":null}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully login to Dispatch and returned authentication token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, login process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Auth/ParcelLockerIdentity": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Parcel terminal login to Dispatch by parcel terminal model.",
        "description": "Method for Parcel terminal login to Dispatch by parcel terminal model. Method return authentication token when login has been success.",
        "requestBody": {
          "description": "The parcel terminal model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerIdentityServiceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerIdentityServiceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerIdentityServiceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfuly login to Dispatch and returned authentication token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerTokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerTokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerTokenModel"
                }
              }
            }
          },
          "400": {
            "description": "Failure login to Dispatch. Invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Failure login to Dispatch. The parcel terminal model is null or identifier is empty.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure login to Dispatch.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure login to Dispatch. Internal server error."
          }
        }
      }
    },
    "/api/Auth/BLE/ParcelLockerIdentity": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Parcel terminal login to Dispatch by parcel terminal model.",
        "description": "Method for Parcel terminal login to Dispatch by parcel terminal model. Method return authentication token when login has been success.",
        "requestBody": {
          "description": "The parcel terminal model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerIdentityServiceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerIdentityServiceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerIdentityServiceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfuly login to Dispatch and returned authentication token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerTokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerTokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerTokenModel"
                }
              }
            }
          },
          "400": {
            "description": "Failure login to Dispatch. Invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Failure login to Dispatch. The parcel terminal model is null or identifier is empty.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure login to Dispatch.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure login to Dispatch. Internal server error."
          }
        }
      }
    },
    "/api/Auth/RefreshAuthToken/{refreshToken}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refreshes the authentication token.",
        "description": "Method for refreshes the authentication token. Method return refreshed authentication token.",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "path",
            "description": "The refresh authentication token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfuly refreshed authentication token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                }
              }
            }
          },
          "400": {
            "description": "Failure refresh authentication token. Invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Failure refresh authentication token. Authentication token for refresh not equals user token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure refresh authentication token.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure refresh authentication token. Internal server error."
          }
        }
      }
    },
    "/api/Auth/ChangePassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Change the user password",
        "description": "Method for change user password.",
        "requestBody": {
          "description": "The change password model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User password successfuly changed."
          },
          "400": {
            "description": "Failure to change user password. Invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to change user password.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to change user password.Internal server error."
          }
        }
      }
    },
    "/api/Auth/FirstChangePassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "First change the user password",
        "description": "Method for first change user password.",
        "requestBody": {
          "description": "The change password model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirstChangePassword"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FirstChangePassword"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FirstChangePassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User password successfuly changed."
          },
          "400": {
            "description": "Failure to change user password. Invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to change user password.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to change user password.Internal server error."
          }
        }
      }
    },
    "/api/Auth/ForgotPassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Forgots the password.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Auth/ConfirmForgotPassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Confirms the forgot password.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmForgotPassword"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmForgotPassword"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmForgotPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, confirm process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Auth/CheckTokenForgotPassword/{userId}/{code}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Checks the token forgot password.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with check result."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Auth/TestConnection": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Tests the connection.",
        "responses": {
          "200": {
            "description": "Successful status code with result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Billing/Create": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "test": {
                    "type": "string",
                    "description": ""
                  }
                }
              },
              "encoding": {
                "test": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Billing/Order/IncreaseLicensesQuantity/{merchantId}/{subscriptionId}/{quantity}": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Increase licanses quantity.",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, increase licanses quantity process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Billing/Checkout/GetLink/{merchantId}/{quantity}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get link.",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with link.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Billing/{merchantId}/GetActiveSubscriptions": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get active subscriptions by merchant Id.",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with subscriptions collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingSubscription"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingSubscription"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingSubscription"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Billing/Subscriptions{subscriptionId}/GetDetails": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get subscription details by subscription Id.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with subscription details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BillingSubscriptionDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingSubscriptionDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingSubscriptionDetails"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BLEManagement/Codes/Sync": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BLECodesSync"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BLECodesSync"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BLECodesSync"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BLECodesSync"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BLECodesSync"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BLECodesSync"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/BLEManagement/LocksStatus/Sync": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BleLocksSync"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BleLocksSync"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BleLocksSync"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/BLEManagement/{parcelLockerId}/Codes/Sync": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BLECodesSync"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BLECodesSync"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BLECodesSync"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BLECodesSync"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BLECodesSync"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BLECodesSync"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/BLEManagement/{parcelLockerId}/Connection/Log": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/BLEManagement/GetUpdate": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BleRequestUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BleRequestUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BleRequestUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BleUpdateCredentials"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BleUpdateCredentials"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BleUpdateCredentials"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/BLEManagement/{parcelLockerId}/Version/Set/{version}": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "summary": "Save info about parcel locker soft version",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": true
      }
    },
    "/api/BLEManagement/{parcelLockerId}/Version/Set": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "summary": "Save info about parcel locker hard and soft version",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VersionInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VersionInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VersionInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/BLEManagement/{parcelLockerId}/Pin/Set/{pin}": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "summary": "Save pin for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pin",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, set pin for parcel locker process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BLEManagement/{parcelLockerId}/Pin/Reset": {
      "put": {
        "tags": [
          "BLEManagement"
        ],
        "summary": "Reset pin for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, reset pin for parcel locker process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BLEManagement/{parcelLockerId}/Pin/Get": {
      "get": {
        "tags": [
          "BLEManagement"
        ],
        "summary": "Get pin for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with pin for parcel locker.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BLEManagement/SaveBluetoothDeviceId/{parcelLockerId}/{bluetoothDeviceId}": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "summary": "Save bluetooth device Id for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "bluetoothDeviceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving bluetooth device for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BLEManagement/GetBluetoothDeviceIdByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "BLEManagement"
        ],
        "summary": "Get bluetooth device Id for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with bluetooth device Id.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BLEManagement/{parcelLockerId}/SyncLockStatus/{boxId}/Status/{lockId}/{isBoxOpen}/{page}": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "summary": "Synchronizes and updates the lock status.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The unique identifier of the parcel locker.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "boxId",
            "in": "path",
            "description": "The unique identifier of the box in the parcel locker.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "lockId",
            "in": "path",
            "description": "The unique identifier of the lock associated with the box.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isBoxOpen",
            "in": "path",
            "description": "Indicates if the lock is open (true) or closed (false).",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "path",
            "description": "The ParcelLockerVisitPageEnum in the dispatch system where this action is performed.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelLockerVisitPageEnum"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates successful status update."
          },
          "400": {
            "description": "Invalid input data was provided (e.g., missing required IDs).",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Lock status change failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred while processing the request."
          }
        }
      }
    },
    "/api/BLEManagement/PostDebugRes": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/BLEManagement/PostDebugResFile": {
      "post": {
        "tags": [
          "BLEManagement"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Box/GetBoxById/{boxId}": {
      "get": {
        "tags": [
          "Box"
        ],
        "summary": "Get box by id",
        "description": "Method for gets the box details by identifier.",
        "parameters": [
          {
            "name": "boxId",
            "in": "path",
            "description": "The box identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with box data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Box"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Box"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Box"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Box/UpdateBoxFullness/{boxId}": {
      "get": {
        "tags": [
          "Box"
        ],
        "summary": "Update fullness for box",
        "description": "Method for update fullness for box by identifier.",
        "parameters": [
          {
            "name": "boxId",
            "in": "path",
            "description": "The box identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with box data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Box"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Box"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Box"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Box/{parcelLockerId}/OpenBox": {
      "put": {
        "tags": [
          "Box"
        ],
        "summary": "Open box by parcel terminal id and box id with additional parameters.",
        "description": "Method for open box on parcel terminal by parcel terminal identifier and box identifier.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel terminal identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenBoxParametersModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenBoxParametersModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenBoxParametersModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Box/GetAllBoxOpenHistoryByBoxId/{boxId}": {
      "get": {
        "tags": [
          "Box"
        ],
        "summary": "Gets all Box open history by box id.",
        "description": "Method for gets all Box open history by box id.",
        "parameters": [
          {
            "name": "boxId",
            "in": "path",
            "description": "The Box identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with box history colletion.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxOpenHistory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxOpenHistory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxOpenHistory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BoxSize/GetAllStackModels": {
      "get": {
        "tags": [
          "BoxSize"
        ],
        "summary": "Gets all stack models.",
        "responses": {
          "200": {
            "description": "Successful status code with boxes stack types collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxesStackType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxesStackType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxesStackType"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BoxSize/GetSizesByStackType/{id}/{companyId}": {
      "get": {
        "tags": [
          "BoxSize"
        ],
        "summary": "Gets the type of the sizes by stack.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The stack type identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with box sizes collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxSize"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxSize"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxSize"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting box sizes process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BoxSize/CreateStackType": {
      "post": {
        "tags": [
          "BoxSize"
        ],
        "summary": "Creates the type of the stack.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxesStackType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxesStackType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BoxesStackType"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BoxSize/UpdateBoxSize": {
      "put": {
        "tags": [
          "BoxSize"
        ],
        "summary": "Updates the size of the box.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxSize"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxSize"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BoxSize"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BoxSize/CreateBoxSize": {
      "post": {
        "tags": [
          "BoxSize"
        ],
        "summary": "Create the size of the box.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxSize"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxSize"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BoxSize"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, creating process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/BoxSize/DeleteBoxSizeById/{id}": {
      "delete": {
        "tags": [
          "BoxSize"
        ],
        "summary": "Deletes box size by Id.",
        "description": "Method for deleting box size by Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The box size identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Box size successfully deleted."
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "418": {
            "description": "Failure to delete box size."
          },
          "500": {
            "description": "Failure to delete box size."
          }
        }
      }
    },
    "/api/CallBack/TelegramWebHook": {
      "post": {
        "tags": [
          "CallBack"
        ],
        "summary": "Telegram bot web hook.",
        "requestBody": {
          "description": "The responce.",
          "content": {
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Client/GetAllByFilterWithPager": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns filtered result of search for clients",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientsFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientsFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientsFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientsFilterResults"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientsFilterResults"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientsFilterResults"
                }
              }
            }
          },
          "400": {
            "description": "Failure to gets the user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Client/GetClientProfileByClientId/{userId}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Gets the client's profile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failure to gets the user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Client/UpdateClient": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates Client's data",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failure to gets the user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Client/GetAllProviders": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Gets all of the providers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Client/CreateProvider/{companyId}": {
      "post": {
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Client/GetClientProvidersByUserId/{userId}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Saves the client's provider",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failure to gets the user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Client/CreateOrUpdateClientProviders": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Creates or updates the Client's providers",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientProviders"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientProviders"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientProviders"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failure to gets the user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Company/GetAll": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets the companies.",
        "description": "Method for gets the companies.",
        "responses": {
          "200": {
            "description": "Successful status code with companies collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetAllCompaniesByUserId/{userId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets the companies by user id.",
        "description": "Method for gets the companies by user id.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with companies collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBase"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetAllCompaniesWithVirtualParcelLockers": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets the companies by user id.",
        "description": "Method for gets the companies by user id.",
        "responses": {
          "200": {
            "description": "Successful status code with companies collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyWithVirtualParcelLockersModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyWithVirtualParcelLockersModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyWithVirtualParcelLockersModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetCurrentCompany": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets the company.",
        "description": "Method for gets the company.",
        "responses": {
          "200": {
            "description": "Successful status code with current company.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBase"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting company process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/Create": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Create company.",
        "description": "Method for create company.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with created company.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ICompanyBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICompanyBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ICompanyBase"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, company creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/CheckIfCompanyExists/{companyName}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Checks if company exist.",
        "description": "Method for checking if company already exists.",
        "parameters": [
          {
            "name": "companyName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with check result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/CompanyRegistration": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Company registration.",
        "description": "Method for company registration.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRegistration"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRegistration"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRegistration"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, company registration process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetLogoForCurrentUser": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get Logo.",
        "description": "Method for Get Logo.",
        "responses": {
          "200": {
            "description": "Successful status code with logo image.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting logo process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "404": {
            "description": "Failed status code, data not found."
          }
        }
      }
    },
    "/api/Company/GetCompaniesByUserId/{userId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get Logo.",
        "description": "Method for Get Companies by UserId.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with companies collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUser"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/Update": {
      "put": {
        "tags": [
          "Company"
        ],
        "summary": "Updates the specified company base.",
        "requestBody": {
          "description": "The company base.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, company updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/UpdateBillingStatus/{companyId}/{isBillingOn}": {
      "put": {
        "tags": [
          "Company"
        ],
        "summary": "Updates the billing status by company identifier.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isBillingOn",
            "in": "path",
            "description": "The billing status.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, billing status updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetCompanyById/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets the company by identifier.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with company.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBase"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetLogoByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets the logo by company identifier.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with logo image.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetRoles/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets the roles.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with roles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppIdentityRole"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppIdentityRole"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppIdentityRole"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/SetRoles/{CompanyId}": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Set roles for company.",
        "description": "Method for set roles for company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The roles identifier.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, setting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/CreateSettings": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Create settings for company.",
        "description": "Method for create settings for company.",
        "requestBody": {
          "description": "The settings for company model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySettings"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/UpdateSettings/{companyId}": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Update settings for company.",
        "description": "Method for update settings for company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The settings for company model.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetSettingsByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get all settings by company id.",
        "description": "Method for gets all settings by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with company settings collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetSettingsByCompanyIdAndKey/{companyId}/{key}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets settings by company id and key.",
        "description": "Method for gets settings by company id and key.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Settings key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with company setting.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetSettingsByCompanyIdAndGroup/{companyId}/{group}": {
      "get": {
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CompanySettingsGroupsEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Company/CheckIsCompanyAvailable/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Check is company available.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with check result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetMessagesForCompany/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get company message settings",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with message templates collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetMessagesByTypeForCompany/{companyId}/{type}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get company message settings",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MessageType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with message templates collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetCountryCode/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get country code",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with company country.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/DeleteCompany/{companyId}": {
      "delete": {
        "tags": [
          "Company"
        ],
        "summary": "Deletes company without parcelLockers by id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, deleting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/SendTestMessageByKey": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Send Test Message By Key",
        "requestBody": {
          "description": "The message template model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestMessageTemlateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestMessageTemlateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestMessageTemlateModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/AssignCompaniesToProvider/{providerCompanyId}": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Assign companies to provider",
        "parameters": [
          {
            "name": "providerCompanyId",
            "in": "path",
            "description": "The provider company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "List of available companies.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to assign company to provider."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/ChangeCompanyProviderAccessibility/{providerCompanyId}/{availableCompanyId}/{isActive}": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Updates company provider relation",
        "parameters": [
          {
            "name": "providerCompanyId",
            "in": "path",
            "description": "The provider company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "availableCompanyId",
            "in": "path",
            "description": "The available company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isActive",
            "in": "path",
            "description": "The company provider is active.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to update company provider relation."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/DeleteCompanyProvider/{providerCompanyId}/{availableCompanyId}": {
      "delete": {
        "tags": [
          "Company"
        ],
        "summary": "Deletes company provider relation",
        "parameters": [
          {
            "name": "providerCompanyId",
            "in": "path",
            "description": "The provider company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "availableCompanyId",
            "in": "path",
            "description": "The available company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to delete company provider relation."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetCompaniesByProviderCompanyId/{providerCompanyId}/{onlyActive}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets available companies for provider by providerCompanyId",
        "parameters": [
          {
            "name": "providerCompanyId",
            "in": "path",
            "description": "The provider company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "onlyActive",
            "in": "path",
            "description": ".",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with available companies for provider by providerCompanyId.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyProviderModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyProviderModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyProviderModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to get available companies for provider by providerCompanyId."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetProvidersByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets available providers for company by companyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with available providers for company by companyId.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyProviderModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyProviderModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyProviderModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to get available providers for company by companyId."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/ChangeParcelLockerCompanies": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Updates parcel locker company relations",
        "requestBody": {
          "description": "List of parcel locker company relations.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParcelLockerCompanyModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParcelLockerCompanyModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParcelLockerCompanyModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to update parcel locker company relation."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetSharedParcelLockersByOwnerCompanyIdAndCompanyId/{ownerCompanyId}/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets available parcel lockers  by ownerCompanyId and companyId",
        "parameters": [
          {
            "name": "ownerCompanyId",
            "in": "path",
            "description": "The parcel locker owner company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with available parcel lockers by ownerCompanyId and companyId.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerCompanyModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerCompanyModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerCompanyModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to get available parcel lockers by ownerCompanyId and companyId."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetCompaniesByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Gets available companies for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with available companies for parcel locker.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerCompanyModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerCompanyModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerCompanyModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to get available companies for parcel locker."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Company/GetReminderSettingsWithProviderSettingsByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Company/GetReminderProviderSettingsByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Company/UpdateReminderProviderSettings": {
      "post": {
        "tags": [
          "Company"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderSettingsWithProviderSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderSettingsWithProviderSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderSettingsWithProviderSettings"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/GetParcelLockerScenario/{scenarioId}": {
      "get": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Get",
        "description": "Method for gets",
        "parameters": [
          {
            "name": "scenarioId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with settings collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/GetParcelLockerScenarioConfig/{scenarioId}": {
      "get": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Get",
        "description": "Method for gets",
        "parameters": [
          {
            "name": "scenarioId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with settings collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/GetParcelLockerScenariosForCompany/{companyId}": {
      "get": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Get",
        "description": "Method for gets",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with settings collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/CreateParcelLockerScenario": {
      "post": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Create",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcelLockerScenarioModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcelLockerScenarioModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcelLockerScenarioModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/UpdateParcelLockerScenario": {
      "put": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Create",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/ApplyLinkedScenarioConfigToParcelLockers/{scenarioId}": {
      "post": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Apply",
        "parameters": [
          {
            "name": "scenarioId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/ResetToDefaultScenarioConfig/{scenarioId}": {
      "put": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Reset Parcel Locker Settings to default.",
        "parameters": [
          {
            "name": "scenarioId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, resetting to default process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/GetScenarioForParcelLocker/{parcelLockerId}": {
      "get": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Get",
        "description": "Method for gets",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with settings collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyParcelLockerScenariosModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/SetScenarioForParcelLocker": {
      "post": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Set",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetParcelLockerScenarioModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetParcelLockerScenarioModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetParcelLockerScenarioModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/ApplyCurrentScenarioForParcelLocker/{parcelLockerId}": {
      "post": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Apply current parcel locker scenario",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/SetScenarioForManyParcelLockers": {
      "post": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Set",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SetParcelLockerScenarioModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SetParcelLockerScenarioModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SetParcelLockerScenarioModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/GetParcelLockersByScenarioId/{scenarioId}": {
      "get": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Get",
        "parameters": [
          {
            "name": "scenarioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerBase"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/DeleteParcelLockerScenario/{parcelLockerId}": {
      "get": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Delete Parcel Locker Scenario",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerScenarios/DeleteScenarioById/{scenarioId}": {
      "delete": {
        "tags": [
          "CompanyParcelLockerScenarios"
        ],
        "summary": "Delete Parcel Locker Scenario by Id",
        "parameters": [
          {
            "name": "scenarioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerSettings/GetParcelLockerSettingsByKeyAndCompanyId/{companyId}/{key}": {
      "get": {
        "tags": [
          "CompanyParcelLockerSettings"
        ],
        "summary": "Get parcel locker settings by key and company id.",
        "description": "Method for gets parcel locker settings by key and company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with setting.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyParcelLockerSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyParcelLockerSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyParcelLockerSettingsModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerSettings/UpdateParcelLockerSettings": {
      "put": {
        "tags": [
          "CompanyParcelLockerSettings"
        ],
        "summary": "Update Parcel Locker Settings.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyParcelLockerSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyParcelLockerSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyParcelLockerSettingsModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerSettings/UpdateParcelLockerTimeZonesByCompanyId/{companyId}": {
      "post": {
        "tags": [
          "CompanyParcelLockerSettings"
        ],
        "summary": "Updates parceLockers timezone for company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DateTimeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DateTimeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DateTimeModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, importing process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyParcelLockerSettings/UpdateParcelLockerRebootTimeByCompanyId/{companyId}": {
      "post": {
        "tags": [
          "CompanyParcelLockerSettings"
        ],
        "summary": "Updates parceLockers timezone for company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DateTimeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DateTimeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DateTimeModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, importing process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/GetThemeByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Get theme by company id.",
        "description": "Method for gets theme by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemePropertyModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemePropertyModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemePropertyModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/ResetToDefaultTheme/{companyId}": {
      "put": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Reset theme properties to default by company id.",
        "description": "Method for reset theme properties to default by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, resetting to default process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/GetLogoByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Get theme logo by company id.",
        "description": "Method for gets theme logo by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with logo image.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/GetCourierLogoByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Get courier theme logo by company id.",
        "description": "Method for gets courier theme logo by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with logo image.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/GetBackgroundImageByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Get theme logo by company id.",
        "description": "Method for gets theme logo by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with logo image.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/SaveCompanyThemeLogo/{companyId}": {
      "post": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Save theme logo for company.",
        "description": "Method for gets theme logo by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The logo data",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/SaveCompanyThemeCourierLogo/{companyId}": {
      "post": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Save courier theme logo for company.",
        "description": "Method for gets courier theme logo by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The courier logo data",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/SaveCompanyThemeBackgroundImage/{companyId}": {
      "post": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Save theme logo for company.",
        "description": "Method for gets theme logo by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The logo data",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/UpdateThemeProperties": {
      "put": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Update theme.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ThemePropertyModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ThemePropertyModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ThemePropertyModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/ImportThemeProperties/{companyId}": {
      "post": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Import theme.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ThemePropertyModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ThemePropertyModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ThemePropertyModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, importing process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/UploadCourierThemeFile/{companyId}": {
      "post": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Upload courier theme.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, uploading process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/UploadCustomThemeFile/{companyId}": {
      "post": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Upload custom theme.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, uploading process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/GetCustomThemeFile/{companyId}": {
      "get": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Get custom theme file by company id.",
        "description": "Method for gets custom theme file by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with custom theme file.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/CompanyTheme/GetCourierThemeFile/{companyId}": {
      "get": {
        "tags": [
          "CompanyTheme"
        ],
        "summary": "Get courier theme file by company id.",
        "description": "Method for gets courier theme file by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with courier theme file.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/GetAvailablePorts/{parcelLockerId}": {
      "get": {
        "tags": [
          "Configurator"
        ],
        "summary": "Sends request to get parcel locker available ports by parcelLockerId",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request to get parcel locker available ports by parcelLockerId successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to get parcel locker available ports by parcelLockerId."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/{parcelLockerId}/AutoConfiguration": {
      "post": {
        "tags": [
          "Configurator"
        ],
        "summary": "Sends request to auto configure parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The locks communication type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStructureModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStructureModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStructureModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request to auto configure parcel locker successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to auto configure parcel locker."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/{parcelLockerId}/ReloadLocks": {
      "post": {
        "tags": [
          "Configurator"
        ],
        "summary": "Call method for research locks",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The port configuration model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationLocksModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationLocksModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationLocksModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request to auto configure parcel locker successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to auto configure parcel locker."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/{parcelLockerId}/AutoSearchProximitySensors": {
      "post": {
        "tags": [
          "Configurator"
        ],
        "summary": "Call method for research locks",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The port configuration model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortConfigModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PortConfigModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PortConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request to auto configure parcel locker successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to auto configure parcel locker."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/{parcelLockerId}/ResearchMissingProximitySensors": {
      "post": {
        "tags": [
          "Configurator"
        ],
        "summary": "Call method for research locks",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The port configuration model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortConfigModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PortConfigModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PortConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request to auto configure parcel locker successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to auto configure parcel locker."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/ResendActualStacksStructure/{parcelLockerId}": {
      "get": {
        "tags": [
          "Configurator"
        ],
        "summary": "Sends request to auto configure parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request to auto configure parcel locker successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to auto configure parcel locker."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/SaveConfigurationStacksStructure/{parcelLockerId}": {
      "post": {
        "tags": [
          "Configurator"
        ],
        "summary": "Save configuration stack structure to db",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStructureServiceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStructureServiceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStructureServiceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request to auto configure parcel locker successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to auto configure parcel locker."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/SaveAndApplyConfigurationStacksStructure/{parcelLockerId}": {
      "post": {
        "tags": [
          "Configurator"
        ],
        "summary": "Save configuration stack structure to db and apply to device",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStructureServiceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStructureServiceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStructureServiceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request to auto configure parcel locker successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to auto configure parcel locker."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/GetConfigurationStacksStructure/{parcelLockerId}": {
      "get": {
        "tags": [
          "Configurator"
        ],
        "summary": "Get configuration stack structure",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationStructureServiceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationStructureServiceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationStructureServiceModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "204": {
            "description": "Request to auto configure parcel locker successfully sent."
          },
          "418": {
            "description": "Failure to send request to auto configure parcel locker."
          }
        }
      }
    },
    "/api/Configurator/{parcelLockerId}/OpenLock/{lockId}": {
      "get": {
        "tags": [
          "Configurator"
        ],
        "summary": "Sends request to open lock",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "lockId",
            "in": "path",
            "description": "The lock identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request to open lock successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to open lock."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Configurator/ChangeConfigurationPort/{parcelLockerId}": {
      "post": {
        "tags": [
          "Configurator"
        ],
        "summary": "Sends request to change parcel locker configuration port",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The port configuration model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortConfigModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PortConfigModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PortConfigModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request tochange parcel locker configuration port successfully sent."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failure to send request to change parcel locker configuration port."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/SwitchRelay/{relayId}/{state}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Switch offgrid parcel locker relay.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "relayId",
            "in": "path",
            "description": "The relay identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "path",
            "description": "if set to `true` [turn on].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/RefreshRelaysStatuses": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets offgrid parcel locker relay statuses.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/TurnOnFan/{turnOn}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Turns the on fan.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "turnOn",
            "in": "path",
            "description": "if set to `true` [turn on].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/TurnOnHeatingElement/{turnOn}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Turns the on heating element.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "turnOn",
            "in": "path",
            "description": "if set to `true` [turn on].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/TurnOnLamp/{turnOn}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Turns the on lamp.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "turnOn",
            "in": "path",
            "description": "if set to `true` [turn on].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/TurnOnMasterBoxLamp/{turnOn}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Turns the on lamp on master box.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "turnOn",
            "in": "path",
            "description": "if set to `true` [turn on].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/GetDeviceData": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets the device data.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/GetDevicesSettingsByParcelLockerId": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets the devices settings data by parcel locker id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/GetDevicesSettingsByParcelLockerIdAndKey/{key}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets the devices settings data by parcel locker id and type.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "The device type identifier.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelLockerDeviceKey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/GetParcelLockerDevicesFullInfoExtByParcelLockerId": {
      "get": {
        "tags": [
          "Devices"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Devices/UpdateParcelLockerDevicesWithSettingsByParcelLockerIdAndKey": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Save the devices settings data.",
        "requestBody": {
          "description": "The device settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerDeviceWithSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/SaveDevicesSettingsOptionsByKey/{key}/{enabled}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets the devices settings data by parcel locker id and key.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "enabled",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelLockerDeviceKey"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{companyId}/UpdateDefaultPinPadTextForAllParcelLockersInCompany": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Save devices settings data for all company parcel lockers by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/SetScreenAndTouchRotation/{rotationSide}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sets screen and touch rotation by parcel locker Id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "the parcel locker Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "rotationSide",
            "in": "path",
            "description": "the rotation side enum value",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RotationSideEnum"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, setting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/SetScannerRereadTimeout/{rereadTimeout}": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Sets screen and touch rotation by parcel locker Id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "the parcel locker Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "rereadTimeout",
            "in": "path",
            "description": "the rotation side enum value",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, setting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/{timer}/SetColorAndBrightness": {
      "post": {
        "tags": [
          "Devices"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "timer",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrightnessRgbLedStripOptionsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrightnessRgbLedStripOptionsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrightnessRgbLedStripOptionsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/RefreshTeltonikaData": {
      "get": {
        "tags": [
          "Devices"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/GetAvailablePrinterLabelSizes": {
      "get": {
        "tags": [
          "Devices"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/TestPlaySiren": {
      "get": {
        "tags": [
          "Devices"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/PrintTestPage": {
      "get": {
        "tags": [
          "Devices"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/RefreshParcelLockerDevicesVersions": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get all current devices versions by Parcel Locker ID",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "Parcel Locker ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceVersionInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceVersionInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceVersionInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/RefreshParcelLockerSunriseAndSunsetTime": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Refresh Parcel Locker Sunrise And Sunset Time by Parcel Locker ID",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "Parcel Locker ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceVersionInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceVersionInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceVersionInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Devices/{parcelLockerId}/GetParcelLockerDevicesInfoByParcelLockerId": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get ParcelLocker Devices Info By ParcelLocker ID",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "Parcel Locker ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with devices info data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDeviceInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/DeviceUpdate/GetVersionsOfUpdate": {
      "get": {
        "tags": [
          "DeviceUpdate"
        ],
        "summary": "Get possible versions of updates",
        "responses": {
          "200": {
            "description": "Successful status code with versions collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/GetDocumentationSectionsByLangCode/{code}/{apiVersion}": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "Gets the all documentation sections by user language.",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/GetDocumentationById/{id}": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "Gets the documentation section by identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/GetByLangAndSectionId/{langCode}/{id}/{apiVersionId}": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "Gets the documentation section by language code and identifier.",
        "parameters": [
          {
            "name": "langCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "apiVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/GetShortInfo/{langCode}/{key}": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "Gets the short documentation sections info by language code.",
        "parameters": [
          {
            "name": "langCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/CreateDocumentationSection": {
      "post": {
        "tags": [
          "Documentation"
        ],
        "summary": "Create the documentation section.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/UpdateDocumentationSection": {
      "post": {
        "tags": [
          "Documentation"
        ],
        "summary": "Update the documentation section.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/DeleteDocumentationSection/{id}": {
      "delete": {
        "tags": [
          "Documentation"
        ],
        "summary": "Delete the documentation section by identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/SavePhoto/{photoId}/{sectionId}": {
      "put": {
        "tags": [
          "Documentation"
        ],
        "summary": "Saves the documentation photo.",
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "description": "The photo identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sectionId",
            "in": "path",
            "description": "The documentation section identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The img.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/GetPhoto/{sectionId}/{id}": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "Gets the documentation photo.",
        "parameters": [
          {
            "name": "sectionId",
            "in": "path",
            "description": "The documentation section identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The image identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/GetAllVersions": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "Gets the all API versions.",
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/InsertApiVersion": {
      "post": {
        "tags": [
          "Documentation"
        ],
        "summary": "Creates a new version of the api.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiVersion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiVersion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiVersion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Documentation/DeleteApiVersion/{id}": {
      "delete": {
        "tags": [
          "Documentation"
        ],
        "summary": "Deletes the version of the api.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentationModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Intrusion/GetAllNotChecked": {
      "get": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Gets all not checked.",
        "responses": {
          "200": {
            "description": "Successful status code with intrusions data collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntrusionExtModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntrusionExtModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntrusionExtModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Intrusion/GetByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Gets all not checked by parcel locker identifier.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with intrusions data collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntrusionExtModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntrusionExtModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntrusionExtModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Intrusion/GetAllNotCheckedGroupedByParcelLocker": {
      "get": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Gets all not checked intrusions with details.",
        "responses": {
          "200": {
            "description": "Successful status code with intrusions data collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntrusionExtModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntrusionExtModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntrusionExtModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Intrusion/SetCheckedIntrusion": {
      "put": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Sets the checked intrusion.",
        "requestBody": {
          "description": "List of intrusions",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntrusionModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntrusionModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntrusionModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, setting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Intrusion/UpdateIntrusionStatusByParcelLockerId": {
      "put": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Changes intrusions status by parcelLocker identifier.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntrusionStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntrusionStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntrusionStatusModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, setting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Intrusion/SetCheckedIntrusionByParcelId/{parcelLockerId}": {
      "put": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Sets the checked intrusion by parcel identifier.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, setting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Intrusion/TurnOffIntrusionSoundByParcelLockerId/{parcelLockerId}": {
      "put": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Turn off sound on parcel locker identefier",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, setting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Intrusion/GetIntrusionsByFilterWithPager": {
      "post": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Gets all intrusions by filter with pager.",
        "description": "Method for getting intrusions by filter with pager.",
        "requestBody": {
          "description": "The filter.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntrusionsFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IntrusionsFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IntrusionsFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Intrusions successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionsList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionsList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionsList"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "404": {
            "description": "No any intrusions by filter for return."
          },
          "500": {
            "description": "Failure to get intrusions by filter with pager."
          }
        }
      }
    },
    "/api/Intrusion/GetIntrusionDetailsById/{id}": {
      "get": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Gets intrusion details by Id.",
        "description": "Method for getting intrusion details by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The intrusion identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Intrusion details successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionExtModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionExtModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionExtModel"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "404": {
            "description": "No intrusion details for return."
          },
          "500": {
            "description": "Failure to get intrusion details."
          }
        }
      }
    },
    "/api/Intrusion/InsertIntrusionComment": {
      "post": {
        "tags": [
          "Intrusion"
        ],
        "summary": "Inserts intrusion comment.",
        "requestBody": {
          "description": "The intrusion comment model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntrusionCommentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IntrusionCommentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IntrusionCommentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, setting process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Issues/GetUncheckedCount": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Gets count of unchecked issues for current user.",
        "description": "Method for getting count of unchecked issues for current user.",
        "responses": {
          "200": {
            "description": "Count of unchecked issues successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Failure to get count of unchecked issues."
          }
        }
      }
    },
    "/api/Issues/GetUncheckedCountByType/{type}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Gets count of unchecked issues for current user.",
        "description": "Method for getting count of unchecked issues for current user.",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IssueReportTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count of unchecked issues successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Failure to get count of unchecked issues."
          }
        }
      }
    },
    "/api/Issues/GetReportById/{reportId}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Gets report by reportId.",
        "description": "Method for getting issue report by reportId.",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The issue report identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issue report successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No issue report for return.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to get issue report."
          }
        }
      }
    },
    "/api/Issues/GetReportsByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "summary": "Gets reports by parcelLockerId.",
        "description": "Method for getting issue report by parcelLockerId.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcelLocker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issue report successfully returned."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No issue report for return.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to get issue report."
          }
        }
      }
    },
    "/api/Issues/Update": {
      "put": {
        "tags": [
          "Issues"
        ],
        "summary": "Updates issue report.",
        "description": "Method for updating issue report.",
        "requestBody": {
          "description": "The issue report model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "204": {
            "description": "Issue report successfully updated."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to update issue report.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to update issue report."
          }
        }
      }
    },
    "/api/Issues/Insert": {
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Creates issue comment",
        "description": "Method for creating issue comment.",
        "requestBody": {
          "description": "The issue comment model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueCommentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueCommentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueCommentModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Issue comment successfully created."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to create issue comment.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to create issue comment."
          }
        }
      }
    },
    "/api/Issues/ChangeIsChecked/{issueId}/{isChecked}": {
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Updates issue report is checked field.",
        "description": "Method for updating issue report is checked field.",
        "parameters": [
          {
            "name": "issueId",
            "in": "path",
            "description": "The issue report identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isChecked",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Issue report is checked field successfully updated."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to update issue report is checked field.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to update issue report is checked field."
          }
        }
      }
    },
    "/api/Issues/GetAllByFilterWithPager": {
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Gets all issue reports by filter with pager.",
        "description": "Method for getting issue reports by filter with pager.",
        "requestBody": {
          "description": "The filter.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReportFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReportFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReportFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issue reports successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReportsList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReportsList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReportsList"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No any issue reports by filter for return.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to get issue reports by filter with pager."
          }
        }
      }
    },
    "/api/Issues/DeleteIssueReports": {
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Deletes all issue reports from list.",
        "description": "Method for deleting issue reports.",
        "requestBody": {
          "description": "The issue reports for deleting.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Issue reports successfully deleted."
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "418": {
            "description": "Failure to delete issue reports."
          },
          "500": {
            "description": "Failure to delete issue reports."
          }
        }
      }
    },
    "/api/Issues/DeleteAllIssueReportsByFilter": {
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Deletes all issue reports for current user.",
        "description": "Method for deleting issue reports for current user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReportFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReportFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReportFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Issue reports for current user successfully deleted."
          },
          "418": {
            "description": "Failure to delete issue reports for current user."
          },
          "500": {
            "description": "Failure to delete issue reports for current user."
          }
        }
      }
    },
    "/api/Issues/CheckAllIssueReports": {
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Marks as checked all issue reports for current user.",
        "description": "Method for marking as checked issue reports for current user.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Issue reports for current user successfully marked as checked."
          },
          "418": {
            "description": "Failure to mark as checked issue reports for current user."
          },
          "500": {
            "description": "Failure to mark as checked issue reports for current user."
          }
        }
      }
    },
    "/api/Issues/CheckIssueReportsByFilter": {
      "post": {
        "tags": [
          "Issues"
        ],
        "summary": "Marks as checked issue reports by filter for current user.",
        "description": "Method for checking issue reports by filter for current user.",
        "requestBody": {
          "description": "The filter of issue reports for deleting.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReportFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReportFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueReportFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Issue reports for current user successfully marked as checked."
          },
          "418": {
            "description": "Failure to mark as checked issue reports by filter for current user."
          },
          "500": {
            "description": "Failure to mark as checked issue reports by filter for current user."
          }
        }
      }
    },
    "/api/LogsManagement/GetUsersLoginHistoryLogs": {
      "get": {
        "tags": [
          "LogsManagement"
        ],
        "summary": "Gets users logins history by company identifier.",
        "responses": {
          "200": {
            "description": "Successful status code with logs collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoginHistoryLog"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoginHistoryLog"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoginHistoryLog"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/LogsManagement/GetUsersActionsHistoryLogs": {
      "post": {
        "tags": [
          "LogsManagement"
        ],
        "summary": "Gets users actions history.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserActionsFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserActionsFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserActionsFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with logs collection."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/LogsManagement/GetScannedCodesHistoryByFilterWithPager": {
      "post": {
        "tags": [
          "LogsManagement"
        ],
        "summary": "Gets scanned codes history.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScannedCodesHistoryFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScannedCodesHistoryFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScannedCodesHistoryFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with scanned codes collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScannedCodesHistoryList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannedCodesHistoryList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScannedCodesHistoryList"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/LogsManagement/GetActionHistoryLogById/{logId}": {
      "get": {
        "tags": [
          "LogsManagement"
        ],
        "summary": "Gets user action history by id.",
        "parameters": [
          {
            "name": "logId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with log instance."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/LogsManagement/GetAllControllersNames": {
      "get": {
        "tags": [
          "LogsManagement"
        ],
        "summary": "Gets all controllers names",
        "responses": {
          "200": {
            "description": "Successful status code with controllers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/LogsManagement/CreateVisitRecord/{parcelLockerId}": {
      "post": {
        "tags": [
          "LogsManagement"
        ],
        "summary": "Create visit record for bluetooth parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerVisitModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerVisitModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerVisitModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving bluetooth device for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/LogsManagement/CreateBoxInfoDetails/{parcelLockerId}": {
      "post": {
        "tags": [
          "LogsManagement"
        ],
        "summary": "Create box info details record for bluetooth parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxInfoDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxInfoDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BoxInfoDetails"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving bluetooth device for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Menu/Items/{roleId}": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Gets the menu items by role identifier.",
        "description": "Method for gets the menu items by role identifier.",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with menu items collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Menu/Items": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Gets the menu items by current user.",
        "description": "Method for gets the menu items by current user.",
        "responses": {
          "200": {
            "description": "Successful status code with menu items collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Menu/GetAll": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Gets the all menu items.",
        "description": "Method for gets the all menu items.",
        "responses": {
          "200": {
            "description": "Successful status code with menu items collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Message/Company/SaveMessageTemplate": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Save company message settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, saving process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Message/ParcelLocker/{parcelLockerId}/SaveMessageTemplate": {
      "post": {
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Message/ParcelLocker/{parcelLockerId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Message/ParcelLocker/MessageTemplate/{messageTemplateId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "name": "messageTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Message/SendTestMessage/{messageId}/To/{recipient}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Send Test Message",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "recipient",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Message/ParcelLocker/DeleteMessageTemplate/{messageTemplateId}": {
      "delete": {
        "tags": [
          "Message"
        ],
        "summary": "Delete message template by messageId.",
        "parameters": [
          {
            "name": "messageTemplateId",
            "in": "path",
            "description": "Message template identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "418": {
            "description": "Failed status code, internal server error."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Message/UpdateMessageStatus": {
      "post": {
        "tags": [
          "Message"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallbackResendModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CallbackResendModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CallbackResendModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Message/GetByCompanyIdAndMessageEventType/{companyId}/{messageEventType}/{parcelLockerId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "messageEventType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MessageEventType"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/MessageProvider/CreateSettings": {
      "post": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Create settings for message provider.",
        "description": "Method for create settings for message provider.",
        "requestBody": {
          "description": "The settings for message provider model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageProviderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageProviderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageProviderModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/DeleteSettings/{settingsId}": {
      "delete": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Deletes message provider by Id.",
        "description": "Method for deleting message provider by Id.",
        "parameters": [
          {
            "name": "settingsId",
            "in": "path",
            "description": "The message provider identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Message provider successfully deleted."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to delete message provider.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to delete message provider. Internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/UpdateSettings": {
      "put": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Update settings for message provider.",
        "description": "Method for update settings for message provider.",
        "requestBody": {
          "description": "The settings for message provider model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageProviderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageProviderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageProviderModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetAllSettingsByCompany/{companyId}": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Get all settings for message providers by company id.",
        "description": "Method for gets all settings for message providers by company id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with settings message providers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetAllSettingsByUserId": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Get all settings for message providers by user id.",
        "description": "Method for gets all settings for message providers by company id.",
        "responses": {
          "200": {
            "description": "Successful status code with settings message providers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetSettingsById/{settingsId}": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Get  settings for message providers by  id.",
        "parameters": [
          {
            "name": "settingsId",
            "in": "path",
            "description": "The settings id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with settings message provider.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageProviderModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageProviderModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageProviderModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetAllAvailableMessageProviders": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Get all available message providers.",
        "description": "Method for gets all available message providers.",
        "responses": {
          "200": {
            "description": "Successful status code with message providers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderInfo"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetAllAvailableMessageProvidersByType/{type}": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Get all available message providers by type.",
        "description": "Method for gets all available message providers.",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TypeMessageEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with message providers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderInfo"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetActiveMessageProviderSettingsByType/{companyId}/{type}": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Get all available message providers by type.",
        "description": "Method for gets all available message providers.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TypeMessageEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with settings message provider.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageProviderModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/ChangeActiveMessageProvider": {
      "put": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Change active message provider.",
        "description": "Method for change active message provider.",
        "requestBody": {
          "description": "The change active message provider model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeActiveMessageProvider"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeActiveMessageProvider"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeActiveMessageProvider"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/TestCallbackMessageProvider": {
      "post": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Test crm message provider.",
        "description": "Method for change active message provider.",
        "requestBody": {
          "description": "The change active message provider model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCallbackMessageProviderRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCallbackMessageProviderRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestCallbackMessageProviderRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with response result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetHrefForTelegramBotSubscribe/{companyId}": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Gets href for telegram bot subscribe.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with response result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/SendTelegramMessageForCurrentUser": {
      "post": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Send telegram message for current user",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, sending process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetSubscriptionsInfoForCurrentUser": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Gets subscriptions info for current user.",
        "responses": {
          "200": {
            "description": "Successful status code with subscriptions info collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscriptionGridModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscriptionGridModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscriptionGridModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetSubscriptionInfo/{userId}/{messageProviderId}/{providerType}": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Gets subscription info by userId, messageProviderId and providerType.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "messageProviderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "providerType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TypeMessageEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with subscription info.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscriptionGridModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscriptionGridModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscriptionGridModel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/GetBotsMessagesSettingsForCurrentUser/{messageProviderId}": {
      "get": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Gets bots messages settings for current user.",
        "parameters": [
          {
            "name": "messageProviderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with settings collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscriptionLevelSettingsModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscriptionLevelSettingsModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscriptionLevelSettingsModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/ChangeUserSubscriptionStatus/{messageProviderId}/{status}": {
      "post": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Changes user subscription status to message provider",
        "parameters": [
          {
            "name": "messageProviderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/SaveUserSubscriptionLevelSettings": {
      "post": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Saves user subscription level settings",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserSubscriptionLevelSettingsModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserSubscriptionLevelSettingsModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserSubscriptionLevelSettingsModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/CreateUserSubscription/{copySettingsFromProvider}": {
      "post": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Creates user subscription and copy settings if provider specified",
        "parameters": [
          {
            "name": "copySettingsFromProvider",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSubscriptionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSubscriptionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSubscriptionModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/MessageProvider/DeleteUserSubscription/{userId}/{messageProviderId}": {
      "delete": {
        "tags": [
          "MessageProvider"
        ],
        "summary": "Deletes user subscription and settings for it",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "messageProviderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, deleting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/Create": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Creates the parcel.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcel"
              },
              "example": {"parcelLockerId":"0926d61f-804e-4f98-b94e-ff8c75742ff3","parcelNumber":"1238899","customerPhone":"0995417798","customerEmail":"admin@modern.com","customerFullName":"Test User","parcelItems":[{"boxId":"7d8ac6a0-fa63-4c22-ba23-a869d222ea03","parcelItemNumber":null,"descriptions":null}],"extensionParameter":null,"expirationDate":null}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcel"
              },
              "example": {"parcelLockerId":"0926d61f-804e-4f98-b94e-ff8c75742ff3","parcelNumber":"1238899","customerPhone":"0995417798","customerEmail":"admin@modern.com","customerFullName":"Test User","parcelItems":[{"boxId":"7d8ac6a0-fa63-4c22-ba23-a869d222ea03","parcelItemNumber":null,"descriptions":null}],"extensionParameter":null,"expirationDate":null}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcel"
              },
              "example": {"parcelLockerId":"0926d61f-804e-4f98-b94e-ff8c75742ff3","parcelNumber":"1238899","customerPhone":"0995417798","customerEmail":"admin@modern.com","customerFullName":"Test User","parcelItems":[{"boxId":"7d8ac6a0-fa63-4c22-ba23-a869d222ea03","parcelItemNumber":null,"descriptions":null}],"extensionParameter":null,"expirationDate":null}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with created parcel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/Create/Base": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Creates the parcel.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcelBase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcelBase"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcelBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with created parcel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/Create/DropOff": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDropOffParcel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDropOffParcel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDropOffParcel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Parcel/CreateReservation": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Creates the reservation parcel.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcel"
              },
              "example": {"parcelLockerId":"98d69085-3b9c-4437-b488-2724df3a8c7c","parcelNumber":"1238899","customerPhone":"0995417798","customerEmail":"admin@modern.com","customerFullName":"Test User","parcelItems":[{"boxId":"9b16e156-dc44-4c5e-ac14-d1e21be13644","parcelItemNumber":null,"descriptions":null}],"extensionParameter":null,"expirationDate":null}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcel"
              },
              "example": {"parcelLockerId":"98d69085-3b9c-4437-b488-2724df3a8c7c","parcelNumber":"1238899","customerPhone":"0995417798","customerEmail":"admin@modern.com","customerFullName":"Test User","parcelItems":[{"boxId":"9b16e156-dc44-4c5e-ac14-d1e21be13644","parcelItemNumber":null,"descriptions":null}],"extensionParameter":null,"expirationDate":null}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcel"
              },
              "example": {"parcelLockerId":"98d69085-3b9c-4437-b488-2724df3a8c7c","parcelNumber":"1238899","customerPhone":"0995417798","customerEmail":"admin@modern.com","customerFullName":"Test User","parcelItems":[{"boxId":"9b16e156-dc44-4c5e-ac14-d1e21be13644","parcelItemNumber":null,"descriptions":null}],"extensionParameter":null,"expirationDate":null}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with created parcel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/ConfirmReservation": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Confirms the reservation.",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelDetails"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, confirmation process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/UpdateParcelInfo": {
      "put": {
        "tags": [
          "Parcel"
        ],
        "summary": "Updates the parcel information.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParcelInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParcelInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParcelInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, updating process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        },
        "deprecated": true
      }
    },
    "/api/Parcel/UpdateFullParcelInfo": {
      "put": {
        "tags": [
          "Parcel"
        ],
        "summary": "Updates the parcel information.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Parcel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Parcel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, updating process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/SaveParcelAdditionalInfo": {
      "put": {
        "tags": [
          "Parcel"
        ],
        "summary": "Saves parcel additional info.",
        "requestBody": {
          "description": "The parcel info model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelAdditionalInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelAdditionalInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelAdditionalInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelAdditionalInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelAdditionalInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelAdditionalInfo"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets the parcel by identifier.",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/GetParcelsByIds": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets the parcel by identifier.",
        "requestBody": {
          "description": "The parcel identifier.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with parcel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/Details": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets the parcel details by identifier.\r\nThis method return additional info about parcel terminal and parcel items  logs list",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelDetails"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/GetParcelByParcelNumber/{parcelNumber}": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets the parcel by parcel number.",
        "parameters": [
          {
            "name": "parcelNumber",
            "in": "path",
            "description": "The parcel number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/ParcelItem/GetAll": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets all items by parcel identifier.",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel items collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItemExt"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItemExt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItemExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/GetAllByFilter": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets all by filter.",
        "requestBody": {
          "description": "The filter.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with parcels collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelSimpleList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelSimpleList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelSimpleList"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/GetClientCode": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets the client code.",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with client code.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ParcelItem/{parcelItemId}/GetAllInfo": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets all information by parcel item identifier.",
        "parameters": [
          {
            "name": "parcelItemId",
            "in": "path",
            "description": "The parcel item identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel item information collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItemInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItemInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItemInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ParcelItem/GetAllByBoxId/{boxId}": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Alls the parcel items by box identifier.",
        "parameters": [
          {
            "name": "boxId",
            "in": "path",
            "description": "The box identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcels items collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItemExt"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItemExt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItemExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/AllParcelItemsByStatus/{parcelItemStatus}": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "parcelItemStatus",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelItemStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Parcel/GetParcelItemsByLinkedBoxId/{boxId}": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets parcel item by box identifier.",
        "parameters": [
          {
            "name": "boxId",
            "in": "path",
            "description": "The box identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel item.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/GetParcelAdditionalInfo/{parcelId}": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets parcel additional info by parcel identifier.",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel info.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelAdditionalInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelAdditionalInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelAdditionalInfo"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/GetParcelCouriers": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets the parcel's couriers.",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel couriers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelCourier"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelCourier"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelCourier"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/GetActiveCourier": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets the active courier.",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/AddNewCourierForParcel/{userId}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Adds the new courier for parcel.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, adding process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelNumber}/AddNewCourierForParcel": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Adds the new courier for parcel.",
        "parameters": [
          {
            "name": "parcelNumber",
            "in": "path",
            "description": "The parcel number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, adding process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/GetParcelsCrmSynchronizationHistory": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets the parcel's synchronization history.",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel synchronization collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelsSynchronizationHistory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelsSynchronizationHistory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelsSynchronizationHistory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/GetParcelCodesSyncRecordsByFilter": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets the parcel codes synchronization records.",
        "requestBody": {
          "description": "The filter for getting synchronization records",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelCodesSyncHistoryFilterWithPager"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelCodesSyncHistoryFilterWithPager"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelCodesSyncHistoryFilterWithPager"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with parcel codes synchronization collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelCodesSyncHistoryList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelCodesSyncHistoryList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelCodesSyncHistoryList"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/Notification/Delivery/Send": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Resends parcel delivered notification manually",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, resending process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/ResendParcelStatusCallback/{parcelStatusRecordId}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Resends parcel status callback",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelStatusRecordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, resending process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ParcelItem/ChangeBoxToAnother": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Changes the box to another.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoxToAnotherModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoxToAnotherModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoxToAnotherModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ParcelItem/ChangeBoxToAnother/BySize": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Changes the box to another with specific size options.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoxModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoxModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoxModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, changing process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ParcelItem/ChangeBoxToAnother/BySizeName": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Changes the box to another with specific size name.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoxBySizeNameModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoxBySizeNameModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBoxBySizeNameModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, changing process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ParcelItem/{parcelItemId}/ChangeBox/{placementType}/{boxId}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Changes the parcel item box.",
        "parameters": [
          {
            "name": "parcelItemId",
            "in": "path",
            "description": "The parcel item identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "boxId",
            "in": "path",
            "description": "The box identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "placementType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelItemPlacementTypeEnum"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelLockerId}/BoxStatusChanged/{boxId}/Status/{isBoxOpen}/{isNotChangedParcelStatus}/{scannedCodeType}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Changes parcel item status according to box status.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "boxId",
            "in": "path",
            "description": "The box identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isBoxOpen",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isNotChangedParcelStatus",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scannedCodeType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ScannedCodeTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelItem"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without parcel details."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelId}/Cancel": {
      "delete": {
        "tags": [
          "Parcel"
        ],
        "summary": "Cancels the parcel.",
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "The parcel identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, canceling process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/CancelDelivery/{parcelItemId}/{parcelLockerId}/{isCancelAllItems}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Cancel Delivery",
        "parameters": [
          {
            "name": "parcelItemId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isCancelAllItems",
            "in": "path",
            "description": "Cancel all parcel items or just current",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/SuspendDelivery/{parcelItemId}/{parcelLockerId}/{isSuspendAllItems}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Suspend Delivery",
        "parameters": [
          {
            "name": "parcelItemId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isSuspendAllItems",
            "in": "path",
            "description": "Suspend delivery for all parcel items or just current",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        },
        "deprecated": true
      }
    },
    "/api/Parcel/SuspendDelivery": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Suspend Delivery",
        "requestBody": {
          "description": "Suspend Delivery Model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspendDeliveryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspendDeliveryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SuspendDeliveryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with parcel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ConfirmDeliveryExtended/{parcelItemId}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Confirms parcel item delivery by parcel item identifier.",
        "parameters": [
          {
            "name": "parcelItemId",
            "in": "path",
            "description": "The parcel item identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with ParcelItem.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, confirm delivery process failed..",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/RestoreDelivery/{parcelItemId}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Restores parcel item canceled delivery by parcel item identifier.",
        "parameters": [
          {
            "name": "parcelItemId",
            "in": "path",
            "description": "The parcel item identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, restore delivery process failed.."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ChangeParcelItemStatusManually/{parcelItemId}/{newStatus}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Changes parcel item status by parcel item identifier.",
        "parameters": [
          {
            "name": "parcelItemId",
            "in": "path",
            "description": "The parcel item identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "newStatus",
            "in": "path",
            "description": "New parcel item status.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelItemStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, restore delivery process failed.."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelNumber}/IsParcelNumberExist": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Determines whether [is parcel number exist] [the specified parcel number].",
        "parameters": [
          {
            "name": "parcelNumber",
            "in": "path",
            "description": "The parcel number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with check result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ParcelCodeProcessing/{code}/{parcelLockerId}": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CodeProcessingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeProcessingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeProcessingModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Parcel/GetActiveParcelsBaseInfo": {
      "get": {
        "tags": [
          "Parcel"
        ],
        "summary": "Gets active parcels base info.\r\nMethod which return all active parcels for company \r\nUsing for synchronization parcels with companies",
        "responses": {
          "200": {
            "description": "Successful status code with list of active parcels.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelLockerId}/Parcels/Clear": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Clear all parcels in parcel locker (only for testing)",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, clear all parcels for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/{parcelLockerId}/Parcels/TestTestTest": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Clear all parcels in parcel locker (only for testing)",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcelFromParcelTerminal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcelFromParcelTerminal"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParcelFromParcelTerminal"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, clear all parcels for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Parcel/ConfirmDelivery/{parcelItemId}": {
      "post": {
        "tags": [
          "Parcel"
        ],
        "summary": "Confirms parcel item delivery by parcel item identifier.",
        "parameters": [
          {
            "name": "parcelItemId",
            "in": "path",
            "description": "The parcel item identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, confirm delivery process failed.."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        },
        "deprecated": true
      }
    },
    "/api/ParcelLocker/Update/ownerCompanyId": {
      "put": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Updates a parcel locker.",
        "parameters": [
          {
            "name": "ownerCompanyId",
            "in": "query",
            "description": "The identifier of the owner company.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The parcel locker model containing the updated information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerBase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerBase"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerBase"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates a successful update with no data returned."
          },
          "400": {
            "description": "Indicates a failed update due to invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Indicates a failed update of the parcel locker process.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Indicates an internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/AllParcelLockers": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the all parcel terminals.",
        "description": "Method for gets the all parcel terminals.",
        "responses": {
          "200": {
            "description": "Successful status code with parcel lockers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerInfoExt"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerInfoExt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerInfoExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/GetAllParcelLockersByFilterAndPager/{userId}": {
      "post": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the all parcel lockers by filter and pager.",
        "description": "Method for gets the all parcel terminals by filter and pager.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with parcel lockers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerList"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/AllParcelLockers/Details": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDetails"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDetails"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDetails"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLocker/GetAvailable/{companyId}/{onlyActive}": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the available.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "onlyActive",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel lockers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDetailsSimple"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDetailsSimple"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerDetailsSimple"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/GetByOwnerCompanyId/{ownerCompanyId}": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the parcel lockers by owner company identifier.",
        "parameters": [
          {
            "name": "ownerCompanyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel lockers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerBase"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/Details": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the details.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel locker details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDetails"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/GetBaseInfoById": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the base info about parcel locker.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel locker base info.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerBase"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/AllFreeBoxes": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the all free boxes from parcel terminal by parcel terminal id.",
        "description": "Method for gets the all free boxes from parcel terminal by parcel terminal identifier.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel terminal identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with free boxes collection for parcel locker.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxExt"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxExt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/SetBoxesWorkingStatusByStackId/{stackId}/{isDisabled}": {
      "put": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Disable the boxes in stack.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "stackId",
            "in": "path",
            "description": "The stack identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isDisabled",
            "in": "path",
            "description": "if set to `true` [is disabled].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, disabling boxes process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/GetParcelLockersWithAddress": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the parcel lockers with address.",
        "responses": {
          "200": {
            "description": "Successful status code with parcel lockers map address collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerMapModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerMapModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerMapModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/UpdateParcelLockAddress": {
      "post": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Updates the address by parcel locker identifier.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerAddress"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerAddress"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating parcel locker address process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/GetAnydesk": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the anydesk.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel locker Anydesk.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/GetVersionHistory": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets the parcel locker version history.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with version history collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockVersionHistoryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockVersionHistoryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockVersionHistoryModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/ChangeBoxStatusWithReason": {
      "put": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Change box status with reason",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisableBoxModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DisableBoxModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DisableBoxModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, changing box status process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/GetConnectionDetailInfo": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Get Connection Detail Info",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with bluetooth device Id.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerConnectionDetailInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerConnectionDetailInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerConnectionDetailInfo"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLocker/GetControllersByStackId/{stackId}": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets all controllers by stackId.",
        "description": "Method for getting all controllers by stackId.",
        "parameters": [
          {
            "name": "stackId",
            "in": "path",
            "description": "The stack identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Controllers successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ControllerServiceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ControllerServiceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ControllerServiceModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "404": {
            "description": "No controllers for return."
          },
          "500": {
            "description": "Failure to get controllers."
          }
        }
      }
    },
    "/api/ParcelLocker/Courier/GetAllActiveForCourier": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets all actives terminals.",
        "description": "Method for getting all actives terminals for current courir with parcels count and addresses.",
        "responses": {
          "200": {
            "description": "Terminals successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSimple"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSimple"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSimple"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "404": {
            "description": "No terminals for return."
          },
          "500": {
            "description": "Failure to get terminals."
          }
        }
      }
    },
    "/api/ParcelLocker/Courier/GetAvailableParcelLockers": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerInfoExt"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerInfoExt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerInfoExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/ChangeControllerWorkingStatus/{controllerId}/{isWorking}": {
      "put": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Changes controller working status.",
        "description": "Method for changing controller working status.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "controllerId",
            "in": "path",
            "description": "The controller identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isWorking",
            "in": "path",
            "description": "The controller working status",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Controller working status successfully updated."
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "418": {
            "description": "Failure to change controller working status."
          },
          "500": {
            "description": "Failure to change controller working status."
          }
        }
      }
    },
    "/api/ParcelLocker/MakeGetImageFromFaceCameraRequest/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLocker"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLocker/GetSavedImagesFromFaceCamera/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLocker"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DateRange"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DateRange"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DateRange"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLocker/GetSavedImageFromFaceCameraByName/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLocker"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/GetParcelLockerCurrentPage": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/GetLocationId": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/SetParcelLockerLocationId": {
      "post": {
        "tags": [
          "ParcelLocker"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLocker/ChangeConfigurationFiles/{companyId}": {
      "put": {
        "tags": [
          "ParcelLocker"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TypeSyncFilesEnum"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TypeSyncFilesEnum"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TypeSyncFilesEnum"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLocker/GetPasswordCredentials/{parcelLockerId}/{passwordAssignment}": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "passwordAssignment",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PasswordAssignmentEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerPasswordModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerPasswordModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerPasswordModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLocker/GenerateNewPassword/{parcelLockerId}/{passwordAssignment}": {
      "put": {
        "tags": [
          "ParcelLocker"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "passwordAssignment",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PasswordAssignmentEnum"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLocker/GetAllParcelLockerPrintLabelByFilter": {
      "post": {
        "tags": [
          "ParcelLocker"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerPrintedLabelFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerPrintedLabelFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerPrintedLabelFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerPrintedLabelList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerPrintedLabelList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerPrintedLabelList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLocker/GetStoresByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Gets stores by parcelLockerId.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with stores collection for parcel locker.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        },
        "deprecated": true
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/OpenBox/{boxId}": {
      "put": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Open box by parcel terminal id and box id.",
        "description": "Method for open box on parcel terminal by parcel terminal identifier and box identifier.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel terminal identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "boxId",
            "in": "path",
            "description": "The box Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        },
        "deprecated": true
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/OpenBox": {
      "put": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Open box by parcel terminal id and box id with additional parameters.",
        "description": "Method for open box on parcel terminal by parcel terminal identifier and box identifier.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel terminal identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenBoxParametersModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenBoxParametersModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenBoxParametersModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        },
        "deprecated": true
      }
    },
    "/api/ParcelLocker/{parcelLockerId}/OpenBoxWithoutChangeStatus/{boxId}": {
      "put": {
        "tags": [
          "ParcelLocker"
        ],
        "summary": "Open box without change status active parcel by parcel terminal id and box id.",
        "description": "Method for open box without change status active parcel on parcel terminal by parcel terminal identifier and box identifier.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel terminal identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "boxId",
            "in": "path",
            "description": "The box Identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        },
        "deprecated": true
      }
    },
    "/api/ParcelLockerAccessManagement/{parcelLockerId}/Service/GetServiceUsersByParcelLocker": {
      "get": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/{parcelLockerId}/Courier/GetByParcelLocker": {
      "get": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/GetHistoryForUserAccessToParcelLockers/{userId}": {
      "get": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserParcelLockerAccessModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserParcelLockerAccessModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserParcelLockerAccessModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/Service/AddUsersAccessToParcelLockers": {
      "post": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserParcelLockerAccessBaseModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserParcelLockerAccessBaseModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserParcelLockerAccessBaseModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/Service/UpdateUsersAccessToParcelLockers": {
      "post": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserParcelLockerAccessBaseModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserParcelLockerAccessBaseModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserParcelLockerAccessBaseModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/Service/UpdateUserAccessToParcelLocker": {
      "post": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserParcelLockerAccessBaseModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserParcelLockerAccessBaseModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserParcelLockerAccessBaseModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/BoxAccess/GetUsersWithAccessToBox/{boxId}": {
      "get": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "parameters": [
          {
            "name": "boxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserBoxAccessExtModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBoxAccessExtModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBoxAccessExtModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/BoxAccess/AddUsersAccessToBox": {
      "post": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserBoxAccessBaseModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserBoxAccessBaseModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserBoxAccessBaseModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/BoxAccess/UpdateUsersAccessToBox": {
      "post": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserBoxAccessBaseModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserBoxAccessBaseModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserBoxAccessBaseModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/BoxAccess/GetParcelLockersWithCountAccessibleBoxesForUser/{userId}": {
      "get": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerWithCountAccessibleBoxesForUserModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerWithCountAccessibleBoxesForUserModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerWithCountAccessibleBoxesForUserModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/BoxAccess/GetUserAccessCode/{userId}": {
      "get": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/BoxAccess/GetAccessibleBoxesForUserByParcelLocker/{userId}/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBoxAccessExtModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBoxAccessExtModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBoxAccessExtModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerAccessManagement/BoxAccess/GetHistoryForUserAndBox/{userId}/{boxId}": {
      "get": {
        "tags": [
          "ParcelLockerAccessManagement"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "boxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBoxAccessExtModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBoxAccessExtModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBoxAccessExtModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerLocalization/GetAllByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "ParcelLockerLocalization"
        ],
        "summary": "Get all localization records by company Id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with localizatons collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerLocalizationModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerLocalizationModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerLocalizationModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerLocalization/ResetToDefaultLocalization/{companyId}": {
      "put": {
        "tags": [
          "ParcelLockerLocalization"
        ],
        "summary": "Reset localization records to default by company Id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company Id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, resetting to default process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerLocalization/InsertOrUpdate": {
      "post": {
        "tags": [
          "ParcelLockerLocalization"
        ],
        "summary": "Insert localization records if not exists or update if exists.",
        "requestBody": {
          "description": "Models collection for insert or update localization records.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParcelLockerLocalizationModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParcelLockerLocalizationModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParcelLockerLocalizationModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, inserting or updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerLocalization/GetAllCultures": {
      "get": {
        "tags": [
          "ParcelLockerLocalization"
        ],
        "summary": "Get all localization cultures info.",
        "responses": {
          "200": {
            "description": "Successful status code with cultures collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocalizationCultureModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocalizationCultureModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocalizationCultureModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerLocalization/GetAllCompanyCultures/{companyId}": {
      "get": {
        "tags": [
          "ParcelLockerLocalization"
        ],
        "summary": "Get all company localization cultures info by company Id.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with cultures collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyLocalizationCultureModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyLocalizationCultureModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyLocalizationCultureModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerLocalization/InsertOrUpdateCompanyCultures": {
      "post": {
        "tags": [
          "ParcelLockerLocalization"
        ],
        "summary": "Insert cultures records for companies if not exists or update if exists.",
        "requestBody": {
          "description": "Models collection for insert or update localization records.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyLocalizationCultureModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyLocalizationCultureModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyLocalizationCultureModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, inserting or updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerLocalization/ImportLocalizations/{companyId}": {
      "post": {
        "tags": [
          "ParcelLockerLocalization"
        ],
        "summary": "Import localization",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportLocalizationsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportLocalizationsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportLocalizationsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, importing process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/Save/{parcelLockerName}/{parcelLockerSystemName}/{connectionType}/{parcelLockerId}/{merchantId}/{key}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Creates the specified model.",
        "parameters": [
          {
            "name": "parcelLockerName",
            "in": "path",
            "description": "Name of the parcel locker.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parcelLockerSystemName",
            "in": "path",
            "description": "System name of the parcel locker.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionType",
            "in": "path",
            "description": "Type of the connection.  Unknown = 0, Bluetooth = 1, Ethernet = 2",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ConnectionTypeEnum"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "Id for parcel locker creating.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoxesStackServiceModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoxesStackServiceModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoxesStackServiceModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with new parcel terminal id.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/Save/{parcelLockerName}/{parcelLockerSystemName}/{connectionType}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Creates the specified model.",
        "parameters": [
          {
            "name": "parcelLockerName",
            "in": "path",
            "description": "Name of the parcel locker.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parcelLockerSystemName",
            "in": "path",
            "description": "System name of the parcel locker.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionType",
            "in": "path",
            "description": "Type of the connection.  Unknown = 0, Bluetooth = 1, Ethernet = 2",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ConnectionTypeEnum"
            }
          }
        ],
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoxesStackServiceModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoxesStackServiceModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoxesStackServiceModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with new parcel terminal id.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/{parcelLockerId}/GetStructure": {
      "get": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Get structure by parcel locker Id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with boxes stacks collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxesStackServiceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxesStackServiceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxesStackServiceModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/AvailableVersionsForVirtual": {
      "get": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Get available versions for virtual parcel lockers.",
        "responses": {
          "200": {
            "description": "Successful status code with versions collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableUpdateBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableUpdateBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableUpdateBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/GetBySystemName/{parcelLockerSystemName}": {
      "get": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Gets parcel locker details by system name.",
        "parameters": [
          {
            "name": "parcelLockerSystemName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel locker details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerDetails"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/DeleteTerminal/{parcelLockerId}": {
      "delete": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Deletes parcel locker by id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, deleting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/ReassignTerminal/{parcelLockerId}": {
      "put": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Reassign parcel locker.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, reassigning process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/SaveParcelLockerUpdate/{companyId}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Save parcel locker update.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, saving process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/ChangeAnyDeskId/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Change AnyDesk Id for parcel locker.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/StopService/{parcelLockerId}/{serviceName}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Sends request to stop parcel locker service by parcelLockerId and service name.",
        "description": "Method for sending request to stop parcel locker service by parcelLockerId and service name.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The service name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request to stop parcel locker service by parcelLockerId and service name successfully sent."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to send request to stop parcel locker service by parcelLockerId and service name."
          }
        }
      }
    },
    "/api/ParcelLockerService/StartService/{parcelLockerId}/{serviceName}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Sends request to start parcel locker service by parcelLockerId and service name.",
        "description": "Method for sending request to start parcel locker service by parcelLockerId and service name.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The service name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request to start parcel locker service by parcelLockerId and service name successfully sent."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to send request to start parcel locker service by parcelLockerId and service name."
          }
        }
      }
    },
    "/api/ParcelLockerService/RestartService/{parcelLockerId}/{serviceName}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Sends request to restart parcel locker service by parcelLockerId and service name.",
        "description": "Method for sending request to restart parcel locker service by parcelLockerId and service name.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The service name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request to restart parcel locker service by parcelLockerId and service name successfully sent."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to send request to restart parcel locker service by parcelLockerId and service name."
          }
        }
      }
    },
    "/api/ParcelLockerService/DisableService/{parcelLockerId}/{serviceName}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Sends request to disable parcel locker service by parcelLockerId and service name.",
        "description": "Method for sending request to disable parcel locker service by parcelLockerId and service name.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The service name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request to disable parcel locker service by parcelLockerId and service name successfully sent."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to send request to disable parcel locker service by parcelLockerId and service name."
          }
        }
      }
    },
    "/api/ParcelLockerService/EnableService/{parcelLockerId}/{serviceName}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Sends request to enable parcel locker service by parcelLockerId and service name.",
        "description": "Method for sending request to enable parcel locker service by parcelLockerId and service name.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The service name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request to enable parcel locker service by parcelLockerId and service name successfully sent."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to send request to enable parcel locker service by parcelLockerId and service name."
          }
        }
      }
    },
    "/api/ParcelLockerService/ChangeVirtualParcelLockersStatusesForCompanies/{action}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Changes virtual parcel lockers statuses for selected companies",
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VirtualParcelLockerActionEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing virtual parcel lockers statuses for selected companies process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/ChangeVirtualParcelLockersStatuses/{action}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Changes virtual parcel lockers statuses for selected companies",
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VirtualParcelLockerActionEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing virtual parcel lockers statuses for selected companies process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/ChangeVirtualParcelLockerStatus/{parcelLockerId}/{action}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Changes virtual parcel locker status",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "action",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/VirtualParcelLockerActionEnum"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing virtual parcel locker status process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/GetParcelLockerConnectionLog/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Get connection log list by parcel locker id and time",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionHistoryFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionHistoryFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionHistoryFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "404": {
            "description": "Failed status code, data not found."
          }
        }
      }
    },
    "/api/ParcelLockerService/RefreshParcelLockerStructure/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Sends request to refresh parcel locker structure by parcelLockerId.",
        "description": "Method for sending request to refresh parcel locker structure by parcelLockerId.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request to refresh parcel locker structure by parcelLockerId successfully sent."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to send request to refresh parcel locker structure by parcelLockerId."
          }
        }
      }
    },
    "/api/ParcelLockerService/RefreshAllParcelLockersStructureByCompanyId/{companyId}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Sends request to refresh all parcel lockers structure by companyId.",
        "description": "Method for sending request to refresh all parcel lockers structure by companyId.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request to refresh all parcel lockers structure by companyId successfully sent."
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to send request to refresh all parcel lockers structure by companyId."
          }
        }
      }
    },
    "/api/ParcelLockerService/GetTimeZoneById/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Get connection log list by parcel locker id and time",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "404": {
            "description": "Failed status code, data not found."
          }
        }
      }
    },
    "/api/ParcelLockerService/SetParcelLockerTimeZone/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Changes virtual parcel locker status",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DateTimeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DateTimeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DateTimeModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing virtual parcel locker status process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/GetVisitHistory/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Get parcel locker visit history by parcel locker id",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "200": {
            "description": "Successful status code with visit history data."
          },
          "404": {
            "description": "Failed status code, data not found."
          }
        }
      },
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Get parcel locker visit history by parcel locker id",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitHistoryFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitHistoryFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VisitHistoryFilter"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "200": {
            "description": "Successful status code with visit history data."
          },
          "404": {
            "description": "Failed status code, data not found."
          }
        }
      }
    },
    "/api/ParcelLockerService/RefreshInternetStatus/{parcelLockerId}": {
      "put": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Refresh internet status data in parcel locker by parcel locker id",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/SetRebootTimeForCompanyParcelLockers/{companyId}": {
      "put": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Set reboot time in parcel locker by parcel locker id",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/ApplyServerConnectionMonitoringOptionsForCompanyParcelLockers/{companyId}": {
      "put": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Refresh options for monitoring server connection status in parcel locker by parcel locker id",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerConnectionMonitoringOptionsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerConnectionMonitoringOptionsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServerConnectionMonitoringOptionsModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/SetSirenDelayForCompanyParcelLockers/{companyId}/{intrusionSirenTime}/{isDelayOn}": {
      "put": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Refresh siren delay in parcel locker by parcel locker id",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "intrusionSirenTime",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isDelayOn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/SetServerConnectionFrequencyOptionForCompanyParcelLockers/{companyId}": {
      "put": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Refresh server connection frequency option in parcel locker by company id",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/SetPinPadDefaultText/{companyId}": {
      "put": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Set pin pad default text",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/GetParcelLockerInfoByIdentifierParameter": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Set pin pad default text",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerBase"
                }
              }
            }
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/Migration/{newMonoblockId}/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Gets settings.",
        "description": "",
        "parameters": [
          {
            "name": "newMonoblockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Terminals successfully returned."
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "404": {
            "description": "No terminals for return."
          },
          "500": {
            "description": "Failure to get terminals."
          }
        }
      }
    },
    "/api/ParcelLockerService/SetClimateControlSettings/{companyId}/{enabled}": {
      "put": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Set climat control settings to all parcel lockers in company",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "enabled",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClimateControlOptionsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClimateControlOptionsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClimateControlOptionsModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/{parcelLockerId}/SetInstallationDate": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Sets installation data",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The Id of the parcel locker",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The dateTime in UTC",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLockerService/{parcelLockerId}/GetAllParcelLockerSettings": {
      "get": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Gets the settings data by parcel locker id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSettings"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSettings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/{parcelLockerId}/GetParcelLockerSettingsByKey/{key}": {
      "get": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Gets the settings data by parcel locker id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelLockerSettingKey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerSettings"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/SaveParcelLockerSettings": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Gets the devices settings data by parcel locker id and key.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/{parcelLockerId}/SaveParcelLockerSettingsByKey/{key}/{enabled}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Gets the devices settings data by parcel locker id and key.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelLockerSettingKey"
            }
          },
          {
            "name": "enabled",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerService/{parcelLockerId}/ResetParcelLockerSettingToDefault/{key}": {
      "post": {
        "tags": [
          "ParcelLockerService"
        ],
        "summary": "Gets the devices settings data by parcel locker id and key.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelLockerSettingKey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with devices settings data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceConfiguration/{parcelLockerId}/ChangeStackNumber/{stackId}/{newNumber}": {
      "put": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Changes stack number.",
        "description": "Method for changing stack number.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "stackId",
            "in": "path",
            "description": "The stack identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "newNumber",
            "in": "path",
            "description": "The new stack number identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Stack number successfully updated."
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "418": {
            "description": "Failure to change stack number."
          },
          "500": {
            "description": "Failure to change stack number."
          }
        }
      }
    },
    "/api/ParcelLockerServiceConfiguration/SaveParcelLockerSettings": {
      "post": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Save settings for parcel locker",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, saving settings for parcel locker process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceConfiguration/{parcelLockerId}/GetParcelLockerSettingsByName/{name}": {
      "get": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Get settings for parcel locker by Id and name",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel locker setting.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerSettings"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceConfiguration/SaveBatteryHealth/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Save battery health model for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatteryHealth"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BatteryHealth"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BatteryHealth"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving battery health for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        },
        "deprecated": true
      }
    },
    "/api/ParcelLockerServiceConfiguration/GetBatteryHealthByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Get battery health model for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with battery health.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BatteryHealth"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatteryHealth"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatteryHealth"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        },
        "deprecated": true
      }
    },
    "/api/ParcelLockerServiceConfiguration/GetMonitoringTimeoutsSettings/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Get monitoring timeouts settings for parcelLocker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving battery health for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceConfiguration/SetMonitoringTimeoutsSettings/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Save monitoring timeouts settings for parcelLocker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MonitoringSettingItemModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MonitoringSettingItemModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MonitoringSettingItemModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving battery health for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceConfiguration/GetAllAvailablePowerSources": {
      "get": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Get all power sources",
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving battery health for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowerSourceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowerSourceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowerSourceModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerServiceConfiguration/AssignPowerSourceToParcelLocker": {
      "post": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Assign power source to parcel locker",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignPowerSourceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignPowerSourceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignPowerSourceModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving battery health for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceConfiguration/UnsetPowerSourceFromParcelLocker": {
      "post": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Assign power source to parcel locker",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving battery health for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceConfiguration/GetAssignedPowerSourcesForParcelLocker/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLockerServiceConfiguration"
        ],
        "summary": "Get assigned power sources for parcelLocker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving battery health for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PowerSourceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PowerSourceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PowerSourceModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/RebootParcelLocker": {
      "post": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "summary": "Send a reboot command to the parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, reboot parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/{rebootType}/HardRebootParcelLocker": {
      "post": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "summary": "Send a reboot command to the teltonika",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "rebootType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/HardRebootEnum"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeltonikaCredentials"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TeltonikaCredentials"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TeltonikaCredentials"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, reboot parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/AdminCode": {
      "get": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "summary": "Get admin code for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with admin code.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/ManufacturerCode": {
      "get": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "summary": "Get manufacturer code for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with admin code.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/GetParcelLockerSystemCodes": {
      "get": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "summary": "Gets admin and manufacturer code for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with admin and manufacturer code.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/AdminCode/GenerateNew": {
      "post": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "summary": "Generate new admin code for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, generation new admin code process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/ManufacturerCode/GenerateNew": {
      "post": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "summary": "Generate new manufacturer code for parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, generation new admin code process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/OpenMenuByCodeType/{codeType}": {
      "get": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "codeType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ParcelLockerMenuType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/OpenCourierMenu": {
      "get": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/GetSerialNumber": {
      "get": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/{parcelLockerId}/SetSerialNumber": {
      "post": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/ConfigurationSettings/GetConfigurationSettingsByParentId/{parentId}": {
      "get": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "summary": "Gets settings.",
        "description": "",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Terminals successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSimple"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSimple"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSimple"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "404": {
            "description": "No terminals for return."
          },
          "500": {
            "description": "Failure to get terminals."
          }
        }
      }
    },
    "/api/ParcelLockerServiceSupport/ConfigurationSettings/GetConfigurationSettingsWithoutParentId": {
      "get": {
        "tags": [
          "ParcelLockerServiceSupport"
        ],
        "summary": "Gets settings.",
        "description": "",
        "responses": {
          "200": {
            "description": "Terminals successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSimple"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSimple"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerSimple"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "404": {
            "description": "No terminals for return."
          },
          "500": {
            "description": "Failure to get terminals."
          }
        }
      }
    },
    "/api/ParcelLockerStructureTemplates/GetAllStructureTemplates": {
      "get": {
        "tags": [
          "ParcelLockerStructureTemplates"
        ],
        "summary": "Gets all parcel locker structure templates.",
        "description": "Method for getting  all parcel locker structure templates.",
        "responses": {
          "200": {
            "description": "All parcel locker structure templates successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "404": {
            "description": "No parcel locker structure templates for return."
          },
          "500": {
            "description": "Failure to get all parcel locker structure templates."
          }
        }
      }
    },
    "/api/ParcelLockerStructureTemplates/GetStructureTemplateById/{id}": {
      "get": {
        "tags": [
          "ParcelLockerStructureTemplates"
        ],
        "summary": "Gets structure template by Id.",
        "description": "Method for getting structure template by Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The structure identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Structure template successfully returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "404": {
            "description": "No structure template for return."
          },
          "500": {
            "description": "Failure to get structure template."
          }
        }
      }
    },
    "/api/ParcelLockerStructureTemplates/SaveStructureTemplate": {
      "post": {
        "tags": [
          "ParcelLockerStructureTemplates"
        ],
        "summary": "Saves structure template.",
        "description": "Method for saving structure template.",
        "requestBody": {
          "description": "The structure template model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerStructureTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerStructureTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerStructureTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "204": {
            "description": "Structure template successfully saved."
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "418": {
            "description": "Failure to save structure template."
          },
          "500": {
            "description": "Failure to save structure template."
          }
        }
      }
    },
    "/api/ParcelLockerStructureTemplates/DeleteStructureTemplateById/{id}": {
      "delete": {
        "tags": [
          "ParcelLockerStructureTemplates"
        ],
        "summary": "Deletes structure template by Id.",
        "description": "Method for deleting structure template by Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The structure identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Structure template successfully deleted."
          },
          "400": {
            "description": "Incorrect requests data."
          },
          "404": {
            "description": "No structure template for delete."
          },
          "500": {
            "description": "Failure to delete structure template."
          }
        }
      }
    },
    "/api/ParcelLockerSystem/GetSystemDataByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLockerSystem"
        ],
        "summary": "Gets all system data by parcelLocker id",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLockerSystem/GetSystemDataByParcelLockerIdAndName/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerSystem"
        ],
        "summary": "Gets system data by Name and parcelLocker id",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerSystemInfoName"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerSystemInfoName"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerSystemInfoName"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLockerSystem/SaveManySystemData/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerSystem"
        ],
        "summary": "Set many parcelLocker system data",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RawParcelLockerSystemInfo"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RawParcelLockerSystemInfo"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RawParcelLockerSystemInfo"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLockerSystem/SaveSystemData/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerSystem"
        ],
        "summary": "Set parcelLocker system data",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RawParcelLockerSystemInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RawParcelLockerSystemInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RawParcelLockerSystemInfo"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/AvailableVersions/{deviceTypeId}": {
      "get": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Get available versions.",
        "parameters": [
          {
            "name": "deviceTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with versions collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableUpdateBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableUpdateBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableUpdateBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/GetAllActualUpdatesWithParcelLockerInfo": {
      "get": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Gets the all parcel terminals with their updaters.",
        "description": "Method for gets the all parcel terminals with their updaters.",
        "responses": {
          "200": {
            "description": "Successful status code with parcel lockers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateWithParcelLockerInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateWithParcelLockerInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateWithParcelLockerInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/GetAllParcelLockerUpdatesInfo/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Gets update history by parcel locker .",
        "description": "Method for gets update history by parcel locker.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with update's collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerUpdateInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerUpdateInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerUpdateInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/GetCurrentParcelLockerUpdateInfo/{parcelLockerId}": {
      "get": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Gets current update history by parcel locker .",
        "description": "Method for gets current update history by parcel locker.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with update info.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerUpdateInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerUpdateInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerUpdateInfo"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/GetReadyToContinueUpdate/{companyId}/{onlyActive}": {
      "get": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Gets the available parcel lockers that ready to continue update.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "onlyActive",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel lockers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerBase"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/ContinueSuspendedUpdate/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Continue update process by parcel locker Id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/ContinueSuspendedUpdateForMultiple": {
      "post": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Continue suspended update for multiple parcel lockers to version.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/CancelParcelLockerUpdate/{parcelLockerId}": {
      "post": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Cancel active updating process by parcel locker Id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/UpdateParcelLockerToVersion": {
      "post": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Update parcel locker to version.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParcelLockerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParcelLockerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParcelLockerModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/UpdateMultipleParcelLockersToVersion": {
      "post": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Update multiple parcel lockers to version.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateParcelLockerModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateParcelLockerModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateParcelLockerModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/UpdateMultipleParcelLockersSubDevicesToVersion": {
      "post": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Update multiple parcel lockers to version.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateParcelLockerSubDevicesModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateParcelLockerSubDevicesModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateParcelLockerSubDevicesModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/GetUpdateScenarios/{deviceTypeId}": {
      "get": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Gets the available scenarios for update.",
        "parameters": [
          {
            "name": "deviceTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with scenarios collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateScenarioModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateScenarioModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateScenarioModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/ParcelLockerUpdates/GetDeviceTypesInfoByParentIdRecursive/{deviceType}/{isVirtual}": {
      "get": {
        "tags": [
          "ParcelLockerUpdates"
        ],
        "summary": "Gets the device types by parent type id.",
        "parameters": [
          {
            "name": "deviceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isVirtual",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with device types collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateScenarioModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateScenarioModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateScenarioModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Partner/Reservation/Create/ByBoxSize": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelCreateBySize"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelCreateBySize"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelCreateBySize"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Partner/Reservation/{parcelId}/Complete/{operationId}": {
      "put": {
        "tags": [
          "Partner"
        ],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Partner/Reservation/Open": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenReservation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenReservation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenReservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parcel"
                }
              }
            }
          }
        }
      }
    },
    "/api/PrinterPaperRolls/ReplacePrinterPaperRoll": {
      "post": {
        "tags": [
          "PrinterPaperRolls"
        ],
        "summary": "Gets all stack models.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with boxes stack types collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/PrinterPaperRolls/GetLatestPrinterPaperRoll/{parcelLockerId}": {
      "get": {
        "tags": [
          "PrinterPaperRolls"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PrinterPaperRoll"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrinterPaperRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrinterPaperRoll"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Reasons/GetReasonsByCompanyIdAndType/{companyId}/{type}": {
      "get": {
        "tags": [
          "Reasons"
        ],
        "summary": "Method for get company settings for broken box",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReasonType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with reasons collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reasons"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reasons"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reasons"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Reasons/GetReasonsByParcelLockIdAndType/{parcelLockId}/{type}": {
      "get": {
        "tags": [
          "Reasons"
        ],
        "summary": "Method for get company settings for broken box by parcellock id and type",
        "parameters": [
          {
            "name": "parcelLockId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReasonType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with reasons collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reasons"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reasons"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reasons"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Reasons/SaveReason": {
      "post": {
        "tags": [
          "Reasons"
        ],
        "summary": "Save settings for broken box reason",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reasons"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Reasons"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Reasons"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Reasons/DeleteReason/{reasonId}": {
      "delete": {
        "tags": [
          "Reasons"
        ],
        "summary": "Delete reason",
        "parameters": [
          {
            "name": "reasonId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, deleting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Gets the all role names.",
        "description": "Method for gets the all role names.",
        "responses": {
          "200": {
            "description": "Successful status code with roles name collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Role/AllRoles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Gets the all roles.",
        "description": "Method for gets the all roles.",
        "responses": {
          "200": {
            "description": "Successful status code with roles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppIdentityRole"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppIdentityRole"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppIdentityRole"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Role/AllAvailable/{companyId}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Gets the available roles.",
        "description": "Method for gets the available roles.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with roles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppIdentityRole"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppIdentityRole"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppIdentityRole"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Role/{roleId}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Gets the role by id.",
        "description": "Method for gets the role by role identifier.",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with role.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppIdentityRole"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppIdentityRole"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppIdentityRole"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Role/{roleId}/{menuId}/{isActive}": {
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Change the IsActive status for role menu item by role id and menu item id.",
        "description": "Method for change the IsActive status for role menu item by role identifier and menu item identifier.",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "menuId",
            "in": "path",
            "description": "The menu item identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isActive",
            "in": "path",
            "description": "The isActive status.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, changing process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Role/CheckIsAdminRole": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Checks the is admin role.",
        "responses": {
          "200": {
            "description": "Successful status code with chesk result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, checking process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Role/CheckIsServiceRole": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Checks the is service role.",
        "responses": {
          "200": {
            "description": "Successful status code with chesk result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, checking process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Role/CheckIsServiceAdminRole": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Checks the is serviceAdmin role.",
        "responses": {
          "200": {
            "description": "Successful status code with chesk result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, checking process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Role/CheckIsUserWithAdvancedAccess": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Checks the is serviceAdmin role.",
        "responses": {
          "200": {
            "description": "Successful status code with chesk result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, checking process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/SiteSettings/GetAllSettings": {
      "get": {
        "tags": [
          "SiteSettings"
        ],
        "summary": "Gets the all role names.",
        "description": "Method for gets the all role names.",
        "responses": {
          "200": {
            "description": "Successful status code with roles name collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteSettings"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteSettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteSettings"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/SiteSettings/GetSettingByKey/{key}": {
      "get": {
        "tags": [
          "SiteSettings"
        ],
        "summary": "Gets settings",
        "description": "Method for gets the all role names.",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with roles name collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSettings"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/SiteSettings/SaveSetting": {
      "post": {
        "tags": [
          "SiteSettings"
        ],
        "summary": "Gets settings",
        "description": "Method for gets the all role names.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with roles name collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/SiteSettings/SaveSettings": {
      "post": {
        "tags": [
          "SiteSettings"
        ],
        "summary": "Gets settings",
        "description": "Method for gets the all role names.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteSettings"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteSettings"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteSettings"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with roles name collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, getting process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Statistic/AllStatistic": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "Gets all statistic about parcels.",
        "description": "Method for gets the all statistic about parcels.",
        "responses": {
          "200": {
            "description": "Successful status code with statistic.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Statistic"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statistic"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statistic"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Statistic/GetChartStatistic": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "Gets all statistic chart statistic.",
        "description": "Method for gets the all statistic about parcels.",
        "responses": {
          "200": {
            "description": "Successful status code with statistic for chart.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartStatistic"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartStatistic"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartStatistic"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Statistic/GetDeliveredParcelStat/{start}/{end}/{timeZoneOffset}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "Get delivered parcel statistic",
        "description": "Method for gets the all statistic about parcels.",
        "parameters": [
          {
            "name": "start",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "timeZoneOffset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with statistic.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreateDeliveryParcelStatModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreateDeliveryParcelStatModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreateDeliveryParcelStatModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Statistic/RecalculateOpenCount": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "summary": "Recalculate open count",
        "description": "Method for gets the all statistic about parcels.",
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Statistic/ParcelLocker/GetParcelLockerParcelsStatistic/{parcelLockerId}/{start}/{end}/{timezone}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "Get parcels statistic by period",
        "description": "Method for getting parcels statistic by period",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "timezone",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with statistic.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerParcelsCountStatistic"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerParcelsCountStatistic"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerParcelsCountStatistic"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Statistic/ParcelLocker/GetParcelLockerBoxSizesStatistic/{parcelLockerId}/{start}/{end}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "Get parcelLocker box sizes statistic by period",
        "description": "Method for getting parcelLocker box sizes statistic by period",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with statistic.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxSizesStatistic"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxSizesStatistic"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoxSizesStatistic"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Statistic/ParcelLocker/GetParcelLockerCurrentParcelStatusesStatistic/{parcelLockerId}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "Get parcelLocker current parcel statuses statistic",
        "description": "Method for getting parcelLocker current parcel statuses statistic",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with statistic.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelItemsStatusesStatistic"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelItemsStatusesStatistic"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelItemsStatusesStatistic"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Statistic/GetParcelLockersPerformanceStatistic/{companyId}/{start}/{end}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticParcelLockerPerformanceModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticParcelLockerPerformanceModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticParcelLockerPerformanceModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/ParcelLockerGetConnectionTimes/{companyId}/{start}/{end}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticParcelLockerConnectionCount"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticParcelLockerConnectionCount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticParcelLockerConnectionCount"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetParcelsCount/{companyId}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticParcelsCountForCompany"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticParcelsCountForCompany"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticParcelsCountForCompany"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetParcelLockersScannedCodesStatistic/{startDate}/{endDate}/{parcelLockerId}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "Gets the data about scanned codes",
        "parameters": [
          {
            "name": "startDate",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerParcelScannedCodes"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerParcelScannedCodes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerParcelScannedCodes"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetParcelLockersConnectionReportByCompanyIdAndDateTimeRange": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByCompanyId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByCompanyId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByCompanyId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockersConnectionReport"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockersConnectionReport"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockersConnectionReport"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetBoxesStatusReportByCompanyIdAndDateTimeRange": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByCompanyId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByCompanyId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByCompanyId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockersConnectionReport"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockersConnectionReport"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockersConnectionReport"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetParcelsByStatuses": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "summary": "Gets the boxes status report by parcel locker identifier and date time range.",
        "requestBody": {
          "description": "The filter.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByParselStatuses"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByParselStatuses"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByParselStatuses"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelStatusesReport"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelStatusesReport"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelStatusesReport"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetParcelLockersReport": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "summary": "Gets parcel lockers for report.",
        "requestBody": {
          "description": "The filter.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByOwnerCompanyId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByOwnerCompanyId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByOwnerCompanyId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockersReportModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockersReportModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockersReportModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetParcelItemTimeReport": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "summary": "Gets the boxes status report by parcel locker identifier and date time range.",
        "requestBody": {
          "description": "The filter.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportFilterByCompanyIdAndParcelItemStatusesAndDateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportFilterByCompanyIdAndParcelItemStatusesAndDateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportFilterByCompanyIdAndParcelItemStatusesAndDateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelStatusesReport"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelStatusesReport"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelStatusesReport"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetPrintedLabelsCountByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetPrintedLabelsStatisticByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticPrintLabelModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticPrintLabelModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticPrintLabelModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Statistic/GetPartnerParcelsStatistics": {
      "post": {
        "tags": [
          "Statistic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByOwnerCompanyId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByOwnerCompanyId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsFilterByOwnerCompanyId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticPartnerParcelReport"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticPartnerParcelReport"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticPartnerParcelReport"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Store/Create": {
      "post": {
        "tags": [
          "Store"
        ],
        "summary": "Creates the specified store.",
        "requestBody": {
          "description": "The store.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with created store.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/Update": {
      "put": {
        "tags": [
          "Store"
        ],
        "summary": "Updates the specified store.",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/GetById/{storeId}": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Gets the by identifier.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with store.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/GetByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Gets the by company identifier.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with stores collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/GetAll": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Gets all stores.",
        "responses": {
          "200": {
            "description": "Successful status code with stores collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/UpdateStoreUser": {
      "post": {
        "tags": [
          "Store"
        ],
        "summary": "Updates users for store.",
        "requestBody": {
          "description": "The storeUser.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUser"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/GetAllStoresByUserId/{userId}": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Gets stores by user identifier.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with stores collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/UpdateUserStores": {
      "post": {
        "tags": [
          "Store"
        ],
        "summary": "Update user stores",
        "description": "Method for update user stores from request model.",
        "requestBody": {
          "description": "The userStore model.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoreUser"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoreUser"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoreUser"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/GetByStoreId/{storeId}": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Gets the all parcel terminals by storeId.",
        "description": "Method for gets the all parcel terminals by storeId.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with parcel lockers collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLocker"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLocker"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLocker"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/GetStoresByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Gets stores by parcelLockerId.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with stores collection for parcel locker.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/SetParcelLockStore": {
      "post": {
        "tags": [
          "Store"
        ],
        "summary": "Set parcel lock store connection",
        "requestBody": {
          "description": "The model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerStore"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerStore"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ParcelLockerStore"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, set store for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/UnsetParcelLockStore/{parcelLockerId}/{storeId}": {
      "delete": {
        "tags": [
          "Store"
        ],
        "summary": "Unset parcel lock store connection",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, unset store for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Store/UnsetAllParcelLockStores/{parcelLockerId}": {
      "delete": {
        "tags": [
          "Store"
        ],
        "summary": "Unset all parcel lock store connection by parcelLockerId",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, unset all stores for farcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Tags/Create": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Creates the specified tag.",
        "requestBody": {
          "description": "The tag.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/AddTagsToParcelLocker/{parcelLockerId}": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Add tags to parcel locker",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcelLocker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The tags.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/GetByCompany/{companyId}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Gets the tags by company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/Update": {
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Updates the specified tag.",
        "requestBody": {
          "description": "The tag.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/UpdateMany": {
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Updates the specified tags.",
        "requestBody": {
          "description": "The tags.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/Delete/{id}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Deletes the tag.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/User/{userId}/SetTags": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Sets the tags for user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The tags.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/User/{userId}/GetTags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Gets the tags by user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/ParcelLocker/{parcelLockerId}/GetTags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Gets the tags by parcel locker.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/AddCompanyTagsForParcelLocker/{companyId}/{parcelLockerId}": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Adds the company tags for parcel locker.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Tags/DeleteParcelLockerTags/{companyId}/{parcelLockerId}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Deletes the parcel locker tags by company identifier.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Telemetry/GetPowerSourceTelemetryByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "Telemetry"
        ],
        "summary": "Gets Power Source Telemetry data by parcel locker identifier.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with addresses collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Telemetry/GetAllPowerSourceTelemetryDataByFilterWithPager": {
      "post": {
        "tags": [
          "Telemetry"
        ],
        "summary": "Gets Power Source Telemetry data by parcel locker identifier.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PowerSourceTelemetryFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PowerSourceTelemetryFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PowerSourceTelemetryFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with addresses collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryList"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Telemetry/{parcelLockerId}/RefreshPowerSourceTelemetryData": {
      "post": {
        "tags": [
          "Telemetry"
        ],
        "summary": "Refresh Power Source Telemetry data for receive by signalR.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "200": {
            "description": "Successful status code with addresses collection."
          }
        }
      }
    },
    "/api/Telemetry/GetLastPowerSourceTelemetryData/{parcelLockerId}": {
      "get": {
        "tags": [
          "Telemetry"
        ],
        "summary": "Gets Power Source Telemetry data by parcel locker identifier.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with addresses collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Telemetry/SavePowerSourceTelemetryData/{parcelLockerId}": {
      "post": {
        "tags": [
          "Telemetry"
        ],
        "summary": "Save power source telemetry data",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatteryTelemetryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BatteryTelemetryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BatteryTelemetryModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, saving battery health for parcel locker process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Teltonika/GetRouterMenuSections/{parcelLockerId}": {
      "get": {
        "tags": [
          "Teltonika"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "404": {
            "description": "Failed status code, parcel locker or them teltonika information not found."
          }
        }
      }
    },
    "/api/Teltonika/GetRouterMenuSectionInfo": {
      "post": {
        "tags": [
          "Teltonika"
        ],
        "summary": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouterSectionInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouterSectionInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RouterSectionInfoModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          },
          "200": {
            "description": "Successful status code."
          },
          "404": {
            "description": "Failed status code, parcel locker or them teltonika information not found."
          }
        }
      }
    },
    "/api/Teltonika/SetRouterMenuSectionInfo": {
      "post": {
        "tags": [
          "Teltonika"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouterSectionInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouterSectionInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RouterSectionInfoModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Teltonika/GetRouterInfoByParcelLockerIdAndName/{parcelLockerId}/{name}": {
      "get": {
        "tags": [
          "Teltonika"
        ],
        "summary": "Returns router info by parcel locker id and info name.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Failed status code, router info not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successful status code with response body.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RouterInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterInfo"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Teltonika/GetAllRouterInfoByParcelLockerId/{parcelLockerId}": {
      "get": {
        "tags": [
          "Teltonika"
        ],
        "summary": "Returns all router info by parcel locker id.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Failed status code, router info not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successful status code with response body.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouterInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouterInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouterInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Teltonika/SetDefaultSim/{parcelLockerId}": {
      "post": {
        "tags": [
          "Teltonika"
        ],
        "summary": "Set default router sim card.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimCardInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimCardInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimCardInfoModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Teltonika/ForceGetSimCardsInfo/{parcelLockerId}/{onlyForActiveSim}": {
      "post": {
        "tags": [
          "Teltonika"
        ],
        "summary": "Force get all sim cards information.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "onlyForActiveSim",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Teltonika/ForceGetSimCardsInfoForCompanyParcelLockers/{companyId}/{onlyForActiveSim}": {
      "post": {
        "tags": [
          "Teltonika"
        ],
        "summary": "Force get all sim cards information for company parcel lockers.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "onlyForActiveSim",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Teltonika/GetTeltonikaLogsByType/{parcelLockerId}/{logType}": {
      "post": {
        "tags": [
          "Teltonika"
        ],
        "summary": "Get events from all log groups.",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "logType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RouterLogType"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/Test/RunSunriseAndSunsetTime": {
      "get": {
        "tags": [
          "Test"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/User/Profile/CreateByAdmin/{autoGenerateEmail}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Creates user from request model.",
        "description": "Method for create user from request model.",
        "parameters": [
          {
            "name": "autoGenerateEmail",
            "in": "path",
            "description": "The value that indicates whether to generate email.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "The user model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with created user.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/CreateApiUser/{companyId}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Creates api user by companyId.",
        "description": "Method for creating api user by companyId.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Api user successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppIdentityUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppIdentityUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppIdentityUser"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect requests data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failure to create api user.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failure to create api user. Internal server error."
          }
        }
      }
    },
    "/api/User/UpdateUserCompanies": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyUser"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyUser"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyUser"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/User/Profile/ResendWelcomeEmailMessage/{userId}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Send welcome email message to user and change password.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, resending process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Profile/ResendExternalUserWelcomeSmsMessage/{userId}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Send welcome sms message to external user and change pincode.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, resending process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Profile/SavePhoto/{userId}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Saves the user photo.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The img.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Profile/UpdateByAdmin": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates user from request model.",
        "description": "Method for update user from request model.",
        "requestBody": {
          "description": "The user model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with updated user.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Profile/Update": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates current logined user from request model.",
        "description": "Method for update current logined user from request model.",
        "requestBody": {
          "description": "The user model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, updating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the current user profile.",
        "description": "Method for gets the current user profile.",
        "responses": {
          "200": {
            "description": "Successful status code with user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Profile/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the user profile by user id.",
        "description": "Method for gets the user profile by user identifier.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Profiles": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the all user profiles.",
        "description": "Method for gets the all user profiles.",
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/UsersByRole/{roleId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the all couriers.",
        "description": "Method for gets the all couriers.",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/UsersByCompanyAndRole/{roleId}/{companyId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the all users by company and role.",
        "description": "Method for getting the all users by company and role.",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/UsersByRoleIsActive/{roleId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the all active couriers.",
        "description": "Method for gets the all active couriers.",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/GetCouriers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the all active couriers.",
        "description": "Method for gets the all active couriers.",
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfileBase"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfileBase"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfileBase"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/GetUsersByCompanyId/{companyId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets users profiles by company",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/GetAvailableUsersForStore/{storeId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets available users by store",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/GetUsersByStoreId/{storeId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets users by store identifier.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Profile/CheckUserEmailExists/{email}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Checks and gets the exists user by user email.",
        "description": "Method for check and get the exists user by user email.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The user email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with check result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/GetUserImage/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the user image.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with image data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/CheckIfExternalUserIdReserved": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Check if external user id is reserved.",
        "requestBody": {
          "description": "The user model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with check result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Courier/CreateByApiUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Creates user with courier role.",
        "requestBody": {
          "description": "The user model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with created user.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBase"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, creating process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Courier/UpdateByApiUser": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates user with courier role.",
        "requestBody": {
          "description": "The user model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBaseModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBaseModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserBaseModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code with updated user.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBase"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, updating process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/DisableUserByApiUser/{userId}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Disables user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, updating process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/Courier/ImportCouriers/{companyId}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Imports couriers from xlsx file.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful status code."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, creating process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/GetCourierByExternalUserId/{externalId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets courier by external user id.",
        "description": "Method for gets courier by external user id.",
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBase"
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, data not found."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/GetCouriersByCompanyAndParcelLocker/{ownerCouriersCompanyId}/{parcelLockerId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the all couriers available for parcel locker.",
        "description": "Method for getting the all users by parcel locker and role.",
        "parameters": [
          {
            "name": "ownerCouriersCompanyId",
            "in": "path",
            "description": "The role identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "The parcel locker identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Failed status code, data not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/User/GetServiceUsersByCompany/{companyId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the all service users available for company.",
        "description": "Method for getting the all service users available for company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The company identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with users profiles collection.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/VirtualParcelLocker/CreateVirtualParcelLocker/{companyId}/{parcelTerminalName}": {
      "post": {
        "tags": [
          "VirtualParcelLocker"
        ],
        "summary": "Create virtual parcel locker.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parcelTerminalName",
            "in": "path",
            "description": "Name of created virtual parcel locker",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "418": {
            "description": "Failed status code, creating process failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/VirtualParcelLocker/UpdateVirtualParcelLockerSettings/parcelLockerId": {
      "put": {
        "tags": [
          "VirtualParcelLocker"
        ],
        "summary": "Update settings for virtual parcel locker only",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimeIntervals"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimeIntervals"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimeIntervals"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "418": {
            "description": "Failed status code, updating settings for virtual parcel locker process failed."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/VirtualParcelLocker/GetVirtualParcelLockerSettings/{parcelLockerId}": {
      "get": {
        "tags": [
          "VirtualParcelLocker"
        ],
        "summary": "Get settings for virtual parcel locker only",
        "parameters": [
          {
            "name": "parcelLockerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful status code with time intervals settings for virtual parcel locker.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeIntervals"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeIntervals"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeIntervals"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed status code, invalid input data."
          },
          "404": {
            "description": "Failed status code, data not found."
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    },
    "/api/VirtualParcelLocker/UpdateVirtualParcelLockersToVersion": {
      "post": {
        "tags": [
          "VirtualParcelLocker"
        ],
        "summary": "Update all virtual parcel lockers to version.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful status code without data."
          },
          "400": {
            "description": "Failed status code, invalid input data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Failed status code, internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APPTypes": {
        "enum": [
          "0 - CourierApp",
          "1 - ServiceApp",
          "2 - MessageService",
          "3 - ReminderService"
        ],
        "type": "string"
      },
      "AddressItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "addressId": {
            "type": "string",
            "format": "uuid"
          },
          "regionType": {
            "$ref": "#/components/schemas/RegionTypeEnum"
          },
          "regionValue": {
            "type": "string",
            "nullable": true
          },
          "addressOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddressWithItems": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressItem"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ApiVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppIdentityRole": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isMain": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppIdentityUser": {
        "type": "object",
        "properties": {
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "claims": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            },
            "nullable": true
          },
          "hasChangedPassword": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "externalUserId": {
            "type": "string",
            "nullable": true
          },
          "pinCodeHash": {
            "type": "string",
            "nullable": true
          },
          "hasChangedPinCode": {
            "type": "boolean"
          },
          "pinCodeAccessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "pinCodeExpiredAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppTokenModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "tokenType": {
            "type": "string",
            "nullable": true
          },
          "expiresIn": {
            "type": "integer",
            "format": "int32"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiresIn": {
            "type": "integer",
            "format": "int32"
          },
          "refreshTokenExpires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AssignPowerSourceModel": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "powerSourceId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AvailableUpdateBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "deviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "versionPrefix": {
            "$ref": "#/components/schemas/VersionPrefixEnum"
          }
        },
        "additionalProperties": false
      },
      "BLECodesSync": {
        "type": "object",
        "properties": {
          "hardwareLockId": {
            "type": "integer",
            "format": "int32"
          },
          "controllerSlaveId": {
            "type": "integer",
            "format": "int32"
          },
          "pickUpCode": {
            "type": "string",
            "nullable": true
          },
          "isPickUpCodeUsed": {
            "type": "boolean"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "isDelete": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BatteryData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "unitOfMeasurement": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatteryHealth": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatteryData"
            },
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BatteryTelemetryModel": {
        "type": "object",
        "properties": {
          "voltage": {
            "type": "number",
            "format": "double"
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "humidity": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "eMail": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "timeUTC": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "vendorAmount": {
            "type": "number",
            "format": "double"
          },
          "affiliateAmount": {
            "type": "number",
            "format": "double"
          },
          "partnersAmount": {
            "type": "number",
            "format": "double"
          },
          "payProExpensesAmount": {
            "type": "number",
            "format": "double"
          },
          "refunded": {
            "type": "number",
            "format": "double"
          },
          "vendorRefunded": {
            "type": "number",
            "format": "double"
          },
          "affiliateRefunded": {
            "type": "number",
            "format": "double"
          },
          "partnersRefunded": {
            "type": "number",
            "format": "double"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BillingOrderDetails": {
        "type": "object",
        "properties": {
          "billingItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingItem"
            },
            "nullable": true
          },
          "billingCustomer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingCustomer"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "ipnTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "ipnTypeName": {
            "type": "string",
            "nullable": true
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "taxesAmount": {
            "type": "number",
            "format": "double"
          },
          "refunded": {
            "type": "number",
            "format": "double"
          },
          "vendorRefunded": {
            "type": "number",
            "format": "double"
          },
          "affiliateRefunded": {
            "type": "number",
            "format": "double"
          },
          "partnersRefunded": {
            "type": "number",
            "format": "double"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "referrerURL": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingSubscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "initialOrderId": {
            "type": "integer",
            "format": "int32"
          },
          "createDateTimeUTC": {
            "type": "string",
            "format": "date-time"
          },
          "nextChargeDate": {
            "type": "string",
            "format": "date-time"
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "cancellationReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "actionReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingSubscriptionDetails": {
        "type": "object",
        "properties": {
          "billingOrderDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingOrderDetails"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "initialOrderId": {
            "type": "integer",
            "format": "int32"
          },
          "createDateTimeUTC": {
            "type": "string",
            "format": "date-time"
          },
          "nextChargeDate": {
            "type": "string",
            "format": "date-time"
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "cancellationReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "actionReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BleFirmwareType": {
        "enum": [
          "0 - Unknown",
          "1 - Nrf",
          "2 - Esp"
        ],
        "type": "string"
      },
      "BleLocksSync": {
        "type": "object",
        "properties": {
          "controllerId": {
            "type": "integer",
            "format": "int32"
          },
          "hardwareLockId": {
            "type": "integer",
            "format": "int32"
          },
          "isLockOpen": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BleRequestUpdate": {
        "type": "object",
        "properties": {
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "firmwareType": {
            "$ref": "#/components/schemas/BleFirmwareType"
          }
        },
        "additionalProperties": false
      },
      "BleUpdateCredentials": {
        "type": "object",
        "properties": {
          "fileUrl": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Box": {
        "type": "object",
        "properties": {
          "lockers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lock"
            },
            "nullable": true
          },
          "proximitySensors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProximitySensor"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "stackId": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "sizeCharacteristics": {
            "$ref": "#/components/schemas/BoxSizeExt"
          },
          "disable": {
            "type": "boolean"
          },
          "isMaster": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/BoxStatusEnum"
          },
          "type": {
            "$ref": "#/components/schemas/BoxTypeEnum"
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rowStart": {
            "type": "integer",
            "format": "int32"
          },
          "rowEnd": {
            "type": "integer",
            "format": "int32"
          },
          "columnStart": {
            "type": "integer",
            "format": "int32"
          },
          "columnEnd": {
            "type": "integer",
            "format": "int32"
          },
          "outBoxId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isAccessible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BoxEventType": {
        "enum": [
          "0 - Unknown",
          "1 - OpenBox",
          "2 - CloseBox",
          "3 - BoxDisabled",
          "4 - BoxEnabled",
          "5 - ChangeBox",
          "6 - OpenLock",
          "7 - CloseLock",
          "8 - Intrusion"
        ],
        "type": "string"
      },
      "BoxExt": {
        "type": "object",
        "properties": {
          "totalOpenCount": {
            "type": "integer",
            "format": "int32"
          },
          "lockers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lock"
            },
            "nullable": true
          },
          "proximitySensors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProximitySensor"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "stackId": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "sizeCharacteristics": {
            "$ref": "#/components/schemas/BoxSizeExt"
          },
          "disable": {
            "type": "boolean"
          },
          "isMaster": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/BoxStatusEnum"
          },
          "type": {
            "$ref": "#/components/schemas/BoxTypeEnum"
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rowStart": {
            "type": "integer",
            "format": "int32"
          },
          "rowEnd": {
            "type": "integer",
            "format": "int32"
          },
          "columnStart": {
            "type": "integer",
            "format": "int32"
          },
          "columnEnd": {
            "type": "integer",
            "format": "int32"
          },
          "outBoxId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isAccessible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BoxInfoActions": {
        "enum": [
          "0 - Unknown",
          "1 - Open",
          "2 - OpenFail",
          "3 - MarkAsBroken",
          "4 - StoreLuggage",
          "5 - Cleaning",
          "6 - Received",
          "7 - MarkAsWorking",
          "8 - Intrusion"
        ],
        "type": "string"
      },
      "BoxInfoDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "action": {
            "$ref": "#/components/schemas/BoxInfoActions"
          },
          "page": {
            "$ref": "#/components/schemas/ParcelLockerVisitPageEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parcelId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parcelItemId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parcelItemNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelItemStatus": {
            "$ref": "#/components/schemas/ParcelItemStatusEnum"
          },
          "isSync": {
            "type": "boolean"
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "isOnline": {
            "type": "boolean"
          },
          "eventType": {
            "$ref": "#/components/schemas/BoxEventType"
          }
        },
        "additionalProperties": false
      },
      "BoxOpenHistory": {
        "type": "object",
        "properties": {
          "boxNumber": {
            "type": "integer",
            "format": "int32"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "userFullName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "page": {
            "$ref": "#/components/schemas/ParcelLockerVisitPageEnum"
          },
          "terminalStatus": {
            "$ref": "#/components/schemas/TerminalStatus"
          },
          "isBoxOpen": {
            "type": "boolean",
            "nullable": true
          },
          "parcelId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parcelItemId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parcelItemNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelItemStatus": {
            "$ref": "#/components/schemas/ParcelItemStatusEnum"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "$ref": "#/components/schemas/BoxEventType"
          }
        },
        "additionalProperties": false
      },
      "BoxServiceModel": {
        "type": "object",
        "properties": {
          "proximitySensors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProximitySensorExtServiceModel"
            },
            "nullable": true
          },
          "locks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LockExtServiceModel"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "stackId": {
            "type": "string",
            "format": "uuid"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "integer",
            "format": "int32"
          },
          "disable": {
            "type": "boolean"
          },
          "isMaster": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/BoxStatus"
          },
          "isBoxBusy": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/BoxTypeEnum"
          },
          "rowStart": {
            "type": "integer",
            "format": "int32"
          },
          "rowEnd": {
            "type": "integer",
            "format": "int32"
          },
          "columnStart": {
            "type": "integer",
            "format": "int32"
          },
          "columnEnd": {
            "type": "integer",
            "format": "int32"
          },
          "outBoxId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoxSize": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "sizeName": {
            "type": "string",
            "nullable": true
          },
          "stackTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "physicalHeight": {
            "type": "integer",
            "format": "int32"
          },
          "physicalWidth": {
            "type": "integer",
            "format": "int32"
          },
          "physicalDepth": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "BoxSizeExt": {
        "type": "object",
        "properties": {
          "size": {
            "$ref": "#/components/schemas/Size"
          },
          "physicalSize": {
            "$ref": "#/components/schemas/PhysicalSize"
          },
          "sizeName": {
            "type": "string",
            "nullable": true
          },
          "isAccessible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BoxSizesStatistic": {
        "type": "object",
        "properties": {
          "sizeName": {
            "type": "string",
            "nullable": true
          },
          "boxesCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BoxStatus": {
        "enum": [
          "0 - Free",
          "1 - Busy",
          "2 - Reserved"
        ],
        "type": "string"
      },
      "BoxStatusEnum": {
        "enum": [
          "0 - Free",
          "1 - Busy",
          "2 - Reserved"
        ],
        "type": "string"
      },
      "BoxTypeCount": {
        "type": "object",
        "properties": {
          "boxType": {
            "$ref": "#/components/schemas/BoxTypeEnum"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BoxTypeEnum": {
        "enum": [
          "0 - General",
          "1 - Fridge",
          "2 - WithLighting",
          "3 - FridgeWithLighting",
          "4 - Freezer"
        ],
        "type": "string"
      },
      "BoxesStack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "integer",
            "format": "int32"
          },
          "boxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoxExt"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoxesStackServiceModel": {
        "required": [
          "orderBy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "typeId": {
            "type": "string",
            "format": "uuid"
          },
          "orderBy": {
            "maximum": 1000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "boxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoxServiceModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoxesStackType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrightnessRgbLedStripOptionsModel": {
        "type": "object",
        "properties": {
          "rgbColor": {
            "$ref": "#/components/schemas/RgbColorModel"
          },
          "brightness": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CallbackResendModel": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string",
            "format": "uuid"
          },
          "countOfSendingAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "responseContent": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "isSuccess": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChangeActiveMessageProvider": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "isActiveProvider": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChangeBoxBySizeNameModel": {
        "type": "object",
        "properties": {
          "boxSizeName": {
            "type": "string",
            "nullable": true
          },
          "parcelItemId": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "openBoxAfterChange": {
            "type": "boolean"
          },
          "isDisableBox": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChangeBoxModel": {
        "type": "object",
        "properties": {
          "changeBoxSizeOption": {
            "$ref": "#/components/schemas/ChangeBoxSizeOptionModel"
          },
          "parcelItemId": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "openBoxAfterChange": {
            "type": "boolean"
          },
          "isDisableBox": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChangeBoxSizeOptionModel": {
        "type": "object",
        "properties": {
          "boxSizeOption": {
            "$ref": "#/components/schemas/SelectBoxSizeOptionEnum"
          },
          "boxSize": {
            "$ref": "#/components/schemas/BoxSizeExt"
          }
        },
        "additionalProperties": false
      },
      "ChangeBoxToAnotherModel": {
        "type": "object",
        "properties": {
          "parcelItemId": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "isSameSizeOrBigger": {
            "type": "boolean"
          },
          "isDisableBox": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChangePassword": {
        "required": [
          "confirmPassword",
          "email",
          "newPassword",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "newPassword": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          }
        },
        "additionalProperties": false
      },
      "ChartStatistic": {
        "type": "object",
        "properties": {
          "openCount": {
            "$ref": "#/components/schemas/StatisticOpenCountModel"
          },
          "parcelCount": {
            "$ref": "#/components/schemas/StatisticParcelCount"
          },
          "dailyOpenCount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenBoxDailyStatisticsModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Claim": {
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "originalIssuer": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "subject": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimsIdentity": {
        "type": "object",
        "properties": {
          "authenticationType": {
            "type": "string",
            "nullable": true
          },
          "isAuthenticated": {
            "type": "boolean",
            "readOnly": true
          },
          "actor": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "bootstrapContext": {
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            },
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "nameClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "roleClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ClientProviders": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "providerId": {
            "type": "string",
            "format": "uuid"
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClientsFilter": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "providers": {
            "type": "string",
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClientsFilterResults": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "usersWithProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientsModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientsModel": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyBase"
            },
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppIdentityRole"
            },
            "nullable": true
          },
          "roleDescription": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "needConfirmPin": {
            "type": "boolean"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "externalUserId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClimateControlOptionsModel": {
        "type": "object",
        "properties": {
          "temperatureFan": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "temperatureFanDeviation": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "humidityFan": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "humidityFanDeviation": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "temperatureHeatElem": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "temperatureHeatElemDeviation": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeConfig": {
        "type": "object",
        "properties": {
          "codeType": {
            "$ref": "#/components/schemas/CodeTypeEnum"
          },
          "openBoxMode": {
            "$ref": "#/components/schemas/OpenBoxModeEnum"
          },
          "needTrim": {
            "type": "boolean"
          },
          "trimStart": {
            "type": "integer",
            "format": "int32"
          },
          "trimEnd": {
            "type": "integer",
            "format": "int32"
          },
          "separator": {
            "type": "string",
            "nullable": true
          },
          "allowReopen": {
            "type": "boolean"
          },
          "showFinishPage": {
            "type": "boolean"
          },
          "needConfirm": {
            "type": "boolean"
          },
          "confirmationOptions": {
            "$ref": "#/components/schemas/ConfirmationOptions"
          }
        },
        "additionalProperties": false
      },
      "CodeEnteringTypeEnum": {
        "enum": [
          "0 - Unknown",
          "1 - ParcelLockerUI",
          "2 - Scanner",
          "3 - PinPad",
          "4 - CouierApp",
          "5 - ClientApp"
        ],
        "type": "string"
      },
      "CodeProcessingModel": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "parcel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parcel"
            },
            "nullable": true
          },
          "activeParcelItem": {
            "$ref": "#/components/schemas/ParcelItem"
          },
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "stepsJson": {
            "type": "string",
            "nullable": true
          },
          "codeType": {
            "$ref": "#/components/schemas/CodeTypeEnum"
          },
          "codeConfig": {
            "$ref": "#/components/schemas/CodeConfig"
          },
          "pdfLabel": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeTypeEnum": {
        "enum": [
          "0 - CourierId",
          "1 - CourierExternalId",
          "2 - CustomerCode",
          "3 - CourierCode",
          "4 - CancelCode",
          "5 - CustomerCodeAndParcelNumber",
          "6 - CustomerCodeAndClientPhone",
          "7 - CourierMenuParcelItemNumber",
          "8 - CourierCodeAndParcelNumber",
          "9 - CourierMenuAndParcelNumber",
          "10 - CourierExternal",
          "11 - CustomerExternal",
          "12 - DropCode",
          "13 - ParcelItemId",
          "14 - ClientDropOff",
          "15 - EncryptedPinCode",
          "16 - ExternalLogInCode",
          "17 - DropExternal"
        ],
        "type": "string"
      },
      "CommunicationProtocolTypeEnum": {
        "enum": [
          "0 - Unknown",
          "1 - SignalR",
          "2 - Mqtt",
          "3 - Bluetooth"
        ],
        "type": "string"
      },
      "CommunicationTypeEnum": {
        "enum": [
          "1 - ModBus",
          "2 - Serial",
          "-1 - Unknown"
        ],
        "type": "string"
      },
      "Company": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "billingOn": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CompanyAdvertisement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "videoName": {
            "type": "string",
            "nullable": true
          },
          "videoOrientation": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "videoData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "billingOn": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CompanyCreate": {
        "required": [
          "language",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "language": {
            "minLength": 1,
            "type": "string"
          },
          "logo": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "billingOn": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyLocalizationCultureModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "cultureId": {
            "type": "string",
            "format": "uuid"
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyParcelLockerScenariosModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "scenarioName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerType": {
            "$ref": "#/components/schemas/ParcelLockerTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "CompanyParcelLockerSettingsModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyProviderModel": {
        "type": "object",
        "properties": {
          "providerCompanyName": {
            "type": "string",
            "nullable": true
          },
          "availableCompanyName": {
            "type": "string",
            "nullable": true
          },
          "updatedByUser": {
            "type": "string",
            "nullable": true
          },
          "sharedParcelLockersCount": {
            "type": "integer",
            "format": "int32"
          },
          "providerCompanyId": {
            "type": "string",
            "format": "uuid"
          },
          "availableCompanyId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CompanyRegistration": {
        "required": [
          "language",
          "name"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "language": {
            "minLength": 1,
            "type": "string"
          },
          "logo": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "billingOn": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanySettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "group": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanySettingsGroupsEnum": {
        "enum": [
          "0 - Timezone",
          "1 - ParcelLocker",
          "2 - ParcelManagement",
          "3 - ParcelTiming",
          "4 - Storage",
          "5 - Stores",
          "6 - Reminder",
          "7 - OffgridParcelLockerSettings"
        ],
        "type": "string"
      },
      "CompanyTokenInfoModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "tokenExpiredAt": {
            "type": "string",
            "format": "date-time"
          },
          "isLoaded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CompanyWithVirtualParcelLockersModel": {
        "type": "object",
        "properties": {
          "countConnectedParcelLockers": {
            "type": "integer",
            "format": "int32"
          },
          "countParcelLockers": {
            "type": "integer",
            "format": "int32"
          },
          "virtualParcelLockers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelLockerBase"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "billingOn": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationLocksModel": {
        "type": "object",
        "properties": {
          "portConfig": {
            "$ref": "#/components/schemas/PortConfigModel"
          },
          "communicationType": {
            "$ref": "#/components/schemas/CommunicationTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationStructureModel": {
        "type": "object",
        "properties": {
          "locksConfig": {
            "$ref": "#/components/schemas/ConfigurationLocksModel"
          },
          "proximitySensorsConfig": {
            "$ref": "#/components/schemas/PortConfigModel"
          },
          "templateId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigurationStructureServiceModel": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "boxesStacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoxesStackServiceModel"
            },
            "nullable": true
          },
          "unusedLocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LockExtServiceModel"
            },
            "nullable": true
          },
          "unusedProximitySensors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProximitySensorExtServiceModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfirmForgotPassword": {
        "required": [
          "confirmNewPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "maxLength": 100,
            "minLength": 8,
            "type": "string",
            "format": "password"
          },
          "confirmNewPassword": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          }
        },
        "additionalProperties": false
      },
      "ConfirmationActionType": {
        "enum": [
          "0 - None",
          "1 - CancelDeliveryIfNotConfirm",
          "2 - ChangeParcelStatusAfterConfirm"
        ],
        "type": "string"
      },
      "ConfirmationOptions": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "subtitle": {
            "type": "string",
            "nullable": true
          },
          "confirmationActionType": {
            "$ref": "#/components/schemas/ConfirmationActionType"
          }
        },
        "additionalProperties": false
      },
      "ConnectionHistoryFilter": {
        "type": "object",
        "properties": {
          "disconnectionReason": {
            "type": "string",
            "nullable": true
          },
          "connectedFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "connectedTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disconnectedFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disconnectedTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConnectionTypeEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Bluetooth",
          "2 - Lan",
          "3 - _4G",
          "4 - _3G",
          "5 - _5G"
        ],
        "type": "string"
      },
      "ControllerServiceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "slaveId": {
            "type": "integer",
            "format": "int32"
          },
          "portName": {
            "type": "string",
            "nullable": true
          },
          "boundRate": {
            "type": "integer",
            "format": "int32"
          },
          "firmwareVersion": {
            "type": "integer",
            "format": "int32"
          },
          "softwareVersion": {
            "type": "integer",
            "format": "int32"
          },
          "hardwareVersion": {
            "type": "integer",
            "format": "int32"
          },
          "serialNumber": {
            "type": "integer",
            "format": "int64"
          },
          "isWorking": {
            "type": "boolean"
          },
          "communicationProtocol": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateDeliveryParcelStatModel": {
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "createdParcels": {
            "type": "integer",
            "format": "int32"
          },
          "canceledParcelCount": {
            "type": "integer",
            "format": "int32"
          },
          "deliveredParcelCount": {
            "type": "integer",
            "format": "int32"
          },
          "receivedParcelCount": {
            "type": "integer",
            "format": "int32"
          },
          "partnerReservationParcelCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateDropOffParcel": {
        "type": "object",
        "properties": {
          "destinationParcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "providerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "$ref": "#/components/schemas/BoxSizeExt"
          },
          "sender": {
            "$ref": "#/components/schemas/ParcelClientDetails"
          },
          "recipient": {
            "$ref": "#/components/schemas/ParcelClientDetails"
          },
          "initialParcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateParcel": {
        "required": [
          "parcelItems",
          "parcelLockerId",
          "parcelNumber"
        ],
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelNumber": {
            "minLength": 1,
            "type": "string"
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerEmail": {
            "type": "string",
            "nullable": true
          },
          "customerFullName": {
            "type": "string",
            "nullable": true
          },
          "parcelItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateParcelItem"
            }
          },
          "extensionParameter": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateParcelBase": {
        "required": [
          "boxId",
          "parcelLockerId",
          "parcelNumber"
        ],
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelNumber": {
            "minLength": 1,
            "type": "string"
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerEmail": {
            "type": "string",
            "nullable": true
          },
          "customerFullName": {
            "type": "string",
            "nullable": true
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CreateParcelFromParcelTerminal": {
        "type": "object",
        "properties": {
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "boxSize": {
            "$ref": "#/components/schemas/BoxSizeExt"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "customerUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "extensionParameters": {
            "type": "string",
            "nullable": true
          },
          "openBoxAfterCreate": {
            "type": "boolean"
          },
          "needAccessibleBox": {
            "type": "boolean"
          },
          "terminalMode": {
            "$ref": "#/components/schemas/TerminalMode"
          },
          "deliveryParcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "openBoxMode": {
            "$ref": "#/components/schemas/OpenBoxModeEnum"
          },
          "createdParcelDeliveryType": {
            "$ref": "#/components/schemas/ParcelDeliveryType"
          }
        },
        "additionalProperties": false
      },
      "CreateParcelItem": {
        "required": [
          "boxId"
        ],
        "type": "object",
        "properties": {
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelItemNumber": {
            "type": "string",
            "nullable": true
          },
          "descriptions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateParcelLockerScenarioModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "scenarioName": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerType": {
            "$ref": "#/components/schemas/ParcelLockerTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "CreateUserModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "pinCode": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "externalUserId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DateFilterField": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DateRange": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DateTimeModel": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "dateAndTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "synchronizationTime": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeviceRestoreScenarioModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "restoreTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceRestoreTaskModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceRestoreTaskModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "restoreScenarioId": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "taskName": {
            "$ref": "#/components/schemas/RestoreTaskNameEnum"
          },
          "status": {
            "$ref": "#/components/schemas/UpdateTaskStatusEnum"
          },
          "info": {
            "type": "string",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "taskSettings": {
            "$ref": "#/components/schemas/DeviceRestoreTaskSettingModel"
          }
        },
        "additionalProperties": false
      },
      "DeviceRestoreTaskSettingModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "restoreTaskId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisableBoxModel": {
        "type": "object",
        "properties": {
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "disableSendLockStatuses": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DocumentationModel": {
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "translation": {
            "type": "string",
            "nullable": true
          },
          "apiVersionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FirstChangePassword": {
        "required": [
          "confirmPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "confirmPassword": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "newPassword": {
            "minLength": 1,
            "pattern": "^(?=\\S*[A-Z])(?=\\S*[0-9])(?=\\S*[a-z])\\S{8,}$",
            "type": "string",
            "format": "password"
          }
        },
        "additionalProperties": false
      },
      "ForgotPassword": {
        "required": [
          "forgotPasswordEmail"
        ],
        "type": "object",
        "properties": {
          "forgotPasswordEmail": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "uri": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HardRebootEnum": {
        "enum": [
          "0 - HardRebootVpnConnection",
          "1 - HardRebootDefaultConnection"
        ],
        "type": "string"
      },
      "ICompanyBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "billingOn": {
            "type": "boolean"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImportLocalizationsModel": {
        "type": "object",
        "properties": {
          "localizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelLockerLocalizationModel"
            },
            "nullable": true
          },
          "companyCultures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyLocalizationCultureModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntrusionActionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "intrusionId": {
            "type": "string",
            "format": "uuid"
          },
          "intrusionStatus": {
            "$ref": "#/components/schemas/IntrusionStatus"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntrusionCommentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "intrusionId": {
            "type": "string",
            "format": "uuid"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntrusionExtModel": {
        "type": "object",
        "properties": {
          "parcelLockerAddress": {
            "$ref": "#/components/schemas/AddressWithItems"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntrusionActionModel"
            },
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntrusionCommentModel"
            },
            "nullable": true
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "checkedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "boxNumber": {
            "type": "integer",
            "format": "int32"
          },
          "stackNumber": {
            "type": "integer",
            "format": "int32"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/IntrusionStatus"
          },
          "isFalseAlarm": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IntrusionModel": {
        "type": "object",
        "properties": {
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "checkedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "boxNumber": {
            "type": "integer",
            "format": "int32"
          },
          "stackNumber": {
            "type": "integer",
            "format": "int32"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/IntrusionStatus"
          },
          "isFalseAlarm": {
            "type": "boolean"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IntrusionStatus": {
        "enum": [
          "0 - New",
          "1 - InProcessOfChecking",
          "2 - Checked"
        ],
        "type": "string"
      },
      "IntrusionsFilterModel": {
        "type": "object",
        "properties": {
          "fetch": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "boxNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parcelLockerId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "companyId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntrusionStatus"
            },
            "nullable": true
          },
          "createdAtDateFilterField": {
            "$ref": "#/components/schemas/DateFilterField"
          },
          "acceptedAtDateFilterField": {
            "$ref": "#/components/schemas/DateFilterField"
          },
          "checkedAtDateFilterField": {
            "$ref": "#/components/schemas/DateFilterField"
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "IntrusionsList": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "intrusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntrusionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueCommentModel": {
        "type": "object",
        "properties": {
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "issueReportCommentsId": {
            "type": "string",
            "format": "uuid"
          },
          "issueId": {
            "type": "string",
            "format": "uuid"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "IssueReport": {
        "type": "object",
        "properties": {
          "parcelTerminalName": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "updatedByUser": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "parcelTerminalId": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssueCommentModel"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/IssueReportTypeEnum"
          },
          "logLevel": {
            "$ref": "#/components/schemas/ReportLogLevelEnum"
          },
          "isChecked": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "statusChangedAt": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "reportedVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueReportFilter": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parcelTerminalId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "companyId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssueReportTypeEnum"
            },
            "nullable": true
          },
          "logLevel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportLogLevelEnum"
            },
            "nullable": true
          },
          "isChecked": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IssueReportTypeEnum": {
        "enum": [
          "0 - None",
          "1 - Client",
          "2 - System",
          "3 - Intrusion",
          "4 - Hardware",
          "5 - CPU",
          "6 - Lock",
          "7 - Memory",
          "8 - Box",
          "9 - Controller",
          "10 - Scanner",
          "11 - Sensors",
          "12 - RAM",
          "13 - ScannedCode",
          "14 - Display",
          "15 - MessageProvider",
          "16 - PinPad",
          "17 - PowerMeter",
          "18 - Printer",
          "19 - PowerSource",
          "20 - RgbLedStrip",
          "21 - BleModule",
          "22 - LteModule",
          "23 - GpsModule",
          "24 - EpdModule",
          "25 - TftModule"
        ],
        "type": "string"
      },
      "IssueReportsList": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "issueReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssueReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KeyValueModel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LabelTypeEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Default",
          "2 - Test"
        ],
        "type": "string"
      },
      "LocalizationCultureModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationTypeEnum": {
        "enum": [
          "0 - Outdoor",
          "1 - Indoor"
        ],
        "type": "string"
      },
      "Lock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "isOpen": {
            "type": "boolean"
          },
          "hardwareId": {
            "type": "integer",
            "format": "int32"
          },
          "controllerSlaveId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LockExtServiceModel": {
        "type": "object",
        "properties": {
          "controller": {
            "$ref": "#/components/schemas/ControllerServiceModel"
          },
          "isLockOpen": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "controllerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "hardwareId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Login": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "pattern": "^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z-]+)+$",
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "rememberMe": {
            "type": "boolean"
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginHistoryLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "isSuccessfulLogin": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MenuItem": {
        "type": "object",
        "properties": {
          "menuItemId": {
            "type": "string",
            "format": "uuid"
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "iconClass": {
            "type": "string",
            "nullable": true
          },
          "sortingPriority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MessageEventType": {
        "enum": [
          "0 - PickUp",
          "1 - DropOff",
          "2 - Cancel",
          "3 - Welcome",
          "4 - ForgotPassword",
          "5 - ParcelInProcessCancel",
          "6 - RemindPickUp"
        ],
        "type": "string"
      },
      "MessageProviderInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "availableTypeMessages": {
            "$ref": "#/components/schemas/TypeMessageEnum"
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageProviderItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageProviderItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageProviderItemModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "messageProviderId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageProviderModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "isActiveProvider": {
            "type": "boolean"
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeMessageEnum"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageProviderItemModel"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MessageTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "messageType": {
            "$ref": "#/components/schemas/MessageType"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "messageEventType": {
            "$ref": "#/components/schemas/MessageEventType"
          },
          "messageProviderType": {
            "$ref": "#/components/schemas/TypeMessageEnum"
          },
          "templateName": {
            "type": "string",
            "nullable": true
          },
          "messageTitle": {
            "type": "string",
            "nullable": true
          },
          "messageBody": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "MessageType": {
        "enum": [
          "0 - System",
          "1 - Terminal"
        ],
        "type": "string"
      },
      "MonitoringSettingItemModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpenBoxDailyStatisticsModel": {
        "type": "object",
        "properties": {
          "openDate": {
            "type": "string",
            "format": "date-time"
          },
          "openedByCourierCount": {
            "type": "integer",
            "format": "int32"
          },
          "openedByClientCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpenBoxModeEnum": {
        "enum": [
          "0 - Default",
          "1 - WithChangeBox",
          "2 - ExtendedWithCancelDelivery",
          "3 - ExtendedWithSuspendDelivery",
          "4 - ReopenWithCancelDelivery",
          "5 - ReopenWithSuspendDelivery",
          "6 - Reopen",
          "7 - ReopenWithChangeBox"
        ],
        "type": "string"
      },
      "OpenBoxParametersModel": {
        "type": "object",
        "properties": {
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "notChangedParcelStatus": {
            "type": "boolean"
          },
          "externalParameters": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenReservation": {
        "type": "object",
        "properties": {
          "reservationID": {
            "type": "string",
            "format": "uuid"
          },
          "operationId": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Parcel": {
        "type": "object",
        "properties": {
          "parcelItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItem"
            },
            "nullable": true
          },
          "extensionParameter": {
            "type": "string",
            "nullable": true
          },
          "clientsDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelClientDetails"
            },
            "nullable": true
          },
          "customerCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "isSyncCRM": {
            "type": "boolean"
          },
          "startDeliveryAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDeliveryAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryType": {
            "$ref": "#/components/schemas/ParcelDeliveryType"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "customerEmail": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "customerFullName": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "ParcelAdditionalInfo": {
        "type": "object",
        "properties": {
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "isSyncCRM": {
            "type": "boolean"
          },
          "startDeliveryAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDeliveryAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryType": {
            "$ref": "#/components/schemas/ParcelDeliveryType"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "customerEmail": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "customerFullName": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "ParcelClientDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "clientType": {
            "$ref": "#/components/schemas/ParcelClientType"
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerEmail": {
            "type": "string",
            "nullable": true
          },
          "customerFullName": {
            "type": "string",
            "nullable": true
          },
          "customerCode": {
            "type": "string",
            "nullable": true
          },
          "extensionParameter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelClientType": {
        "enum": [
          "0 - Unknown",
          "1 - Recipient",
          "2 - Sender"
        ],
        "type": "string"
      },
      "ParcelCodesSyncHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "dataForSync": {
            "type": "string",
            "nullable": true
          },
          "syncResult": {
            "type": "string",
            "nullable": true
          },
          "parcelSynchronizationType": {
            "$ref": "#/components/schemas/ParcelSynchronizationTypeEnum"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelCodesSyncHistoryFilterWithPager": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          },
          "parcelLockerId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "parcelSynchronizationType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelSynchronizationTypeEnum"
            },
            "nullable": true
          },
          "createdAtStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAtEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "orderByDesc": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ParcelCodesSyncHistoryList": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "parcelCodesSyncHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelCodesSyncHistory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelCourier": {
        "type": "object",
        "properties": {
          "courierId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelCreateBySize": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "$ref": "#/components/schemas/BoxSizeExt"
          },
          "extensionParameter": {
            "type": "string",
            "nullable": true
          },
          "sender": {
            "$ref": "#/components/schemas/ParcelClientDetails"
          },
          "recipient": {
            "$ref": "#/components/schemas/ParcelClientDetails"
          }
        },
        "additionalProperties": false
      },
      "ParcelDeliveryType": {
        "enum": [
          "0 - Unknown",
          "1 - Default",
          "2 - DropOff"
        ],
        "type": "string"
      },
      "ParcelDetails": {
        "type": "object",
        "properties": {
          "customerCode": {
            "type": "string",
            "nullable": true
          },
          "parcelLocker": {
            "$ref": "#/components/schemas/ParcelLockerBase"
          },
          "parcelItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItemDetails"
            },
            "nullable": true
          },
          "clientsDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelClientDetails"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "isSyncCRM": {
            "type": "boolean"
          },
          "startDeliveryAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDeliveryAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryType": {
            "$ref": "#/components/schemas/ParcelDeliveryType"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "customerEmail": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "customerFullName": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "ParcelFilter": {
        "type": "object",
        "properties": {
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelItemNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "companyId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "courierId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/ParcelFilterEnum"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelFilterEnum": {
        "enum": [
          "0 - All",
          "1 - InProgress",
          "2 - Completed",
          "3 - Return"
        ],
        "type": "string"
      },
      "ParcelItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelItemNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ParcelItemStatusEnum"
          },
          "descriptions": {
            "type": "string",
            "nullable": true
          },
          "placements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItemPlacement"
            },
            "nullable": true
          },
          "stackId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "boxId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "boxNumber": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "courierCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "cancelCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "dropOffCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "ParcelItemDetails": {
        "type": "object",
        "properties": {
          "stackNumber": {
            "type": "integer",
            "format": "int32"
          },
          "boxSize": {
            "type": "integer",
            "format": "int32"
          },
          "boxType": {
            "type": "integer",
            "format": "int32"
          },
          "parcelItemInfs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItemInfo"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelItemNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ParcelItemStatusEnum"
          },
          "descriptions": {
            "type": "string",
            "nullable": true
          },
          "placements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItemPlacement"
            },
            "nullable": true
          },
          "stackId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "boxId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "boxNumber": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "courierCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "cancelCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "dropOffCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "ParcelItemExt": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelItemNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ParcelItemStatusEnum"
          },
          "descriptions": {
            "type": "string",
            "nullable": true
          },
          "placements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItemPlacement"
            },
            "nullable": true
          },
          "stackId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "boxId": {
            "type": "string",
            "format": "uuid",
            "deprecated": true
          },
          "boxNumber": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "courierCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "cancelCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "dropOffCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "ParcelItemInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelItemId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "statusInfo": {
            "type": "string",
            "nullable": true
          },
          "addInfo1": {
            "type": "string",
            "nullable": true
          },
          "addInfo2": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "creatorName": {
            "type": "string",
            "nullable": true
          },
          "eventTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelItemPlacement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelItemId": {
            "type": "string",
            "format": "uuid"
          },
          "placementType": {
            "$ref": "#/components/schemas/ParcelItemPlacementTypeEnum"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stackId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stackNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "boxId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "boxNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "courierCode": {
            "type": "string",
            "nullable": true
          },
          "cancelCode": {
            "type": "string",
            "nullable": true
          },
          "dropOffCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelItemPlacementTypeEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Initial",
          "2 - Destination"
        ],
        "type": "string"
      },
      "ParcelItemStatusEnum": {
        "enum": [
          "0 - New",
          "1 - Received",
          "2 - InProcessDelivery",
          "3 - ReadyToPickUp",
          "4 - InProcessAssembly",
          "5 - LoadingToStackBox",
          "6 - Canceled",
          "7 - InProcessCancel",
          "8 - Reserved",
          "9 - LoadingToDeliveryStackBox",
          "10 - ReadyToDelivery",
          "11 - DeliveryCanceled",
          "12 - ReadyForCourierPickUp",
          "13 - ReceivedByCourier",
          "14 - Overdue",
          "15 - SuspendedDelivery",
          "16 - LoadingToDropStackBox",
          "17 - InProcessReceived",
          "18 - NewDrop",
          "19 - PartnerReservation",
          "20 - Immutable"
        ],
        "type": "string"
      },
      "ParcelItemsStatusesStatistic": {
        "type": "object",
        "properties": {
          "totalParcelItemsCount": {
            "type": "integer",
            "format": "int32"
          },
          "new": {
            "type": "integer",
            "format": "int32"
          },
          "received": {
            "type": "integer",
            "format": "int32"
          },
          "inProcessDelivery": {
            "type": "integer",
            "format": "int32"
          },
          "readyToPickUp": {
            "type": "integer",
            "format": "int32"
          },
          "canceled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockVersionHistoryModel": {
        "type": "object",
        "properties": {
          "parcelLockId": {
            "type": "string",
            "format": "uuid"
          },
          "isCurrent": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "hardVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLocker": {
        "type": "object",
        "properties": {
          "boxesStacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoxesStack"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "virtualMode": {
            "type": "boolean"
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionTypeEnum"
          },
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerType": {
            "$ref": "#/components/schemas/ParcelLockerTypeEnum"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationTypeEnum"
          },
          "communicationProtocol": {
            "$ref": "#/components/schemas/CommunicationProtocolTypeEnum"
          },
          "installationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerAddress": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "addressId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerAdvertisement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "advertisementId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "timeInterval": {
            "type": "integer",
            "format": "int32"
          },
          "videoOrientation": {
            "type": "string",
            "nullable": true
          },
          "advertisement": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "virtualMode": {
            "type": "boolean"
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionTypeEnum"
          },
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerType": {
            "$ref": "#/components/schemas/ParcelLockerTypeEnum"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationTypeEnum"
          },
          "communicationProtocol": {
            "$ref": "#/components/schemas/CommunicationProtocolTypeEnum"
          },
          "installationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerCompanyModel": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "updatedByUser": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerConnectionDetailInfo": {
        "type": "object",
        "properties": {
          "bluetoothDeviceId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "virtualMode": {
            "type": "boolean"
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionTypeEnum"
          },
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerType": {
            "$ref": "#/components/schemas/ParcelLockerTypeEnum"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationTypeEnum"
          },
          "communicationProtocol": {
            "$ref": "#/components/schemas/CommunicationProtocolTypeEnum"
          },
          "installationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerConnectionFilter": {
        "enum": [
          "0 - All",
          "1 - Connected",
          "2 - Disconnected"
        ],
        "type": "string"
      },
      "ParcelLockerDetails": {
        "type": "object",
        "properties": {
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "ownerCompanyId": {
            "type": "string",
            "format": "uuid"
          },
          "ownerCompanyName": {
            "type": "string",
            "nullable": true
          },
          "stores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Store"
            },
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressWithItems"
          },
          "boxesStacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoxesStack"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "virtualMode": {
            "type": "boolean"
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionTypeEnum"
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerType": {
            "$ref": "#/components/schemas/ParcelLockerTypeEnum"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationTypeEnum"
          },
          "communicationProtocol": {
            "$ref": "#/components/schemas/CommunicationProtocolTypeEnum"
          },
          "installationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerDetailsSimple": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/AddressWithItems"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "virtualMode": {
            "type": "boolean"
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionTypeEnum"
          },
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerType": {
            "$ref": "#/components/schemas/ParcelLockerTypeEnum"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationTypeEnum"
          },
          "communicationProtocol": {
            "$ref": "#/components/schemas/CommunicationProtocolTypeEnum"
          },
          "installationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerDeviceConnectionStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "connectionStatus": {
            "$ref": "#/components/schemas/ParcelLockerDeviceConnectionStatusEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "eventTime": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerDeviceConnectionStatusEnum": {
        "enum": [
          "0 - Offline",
          "1 - Online",
          "-1 - Unknown"
        ],
        "type": "string"
      },
      "ParcelLockerDeviceInfo": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/ParcelLockerDeviceSettings"
          },
          "status": {
            "$ref": "#/components/schemas/ParcelLockerDeviceStatus"
          },
          "connectionStatus": {
            "$ref": "#/components/schemas/ParcelLockerDeviceConnectionStatus"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerDeviceKey": {
        "enum": [
          "0 - Unknown",
          "1 - TemperatureHumiditySensor",
          "2 - Fan",
          "3 - HeatingElement",
          "4 - Speaker",
          "5 - Siren",
          "6 - StackLight",
          "8 - AirQualitySensor",
          "9 - AnalogDevice",
          "10 - PowerMeterSensor",
          "11 - PresenceSensor",
          "12 - DoorSensor",
          "13 - BarcodeScanner",
          "16 - MasterStackLight",
          "17 - MainLight",
          "19 - RgbLedStrip",
          "20 - Printer",
          "21 - Display",
          "22 - SurveillanceCameras",
          "23 - FaceCamera",
          "24 - ProximitySensor",
          "25 - RfidReader",
          "26 - Router",
          "27 - PinPad",
          "30 - MdbCashlessDevice",
          "31 - DistanceSensor"
        ],
        "type": "string"
      },
      "ParcelLockerDeviceSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerDeviceStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "statusType": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "eventTime": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerDeviceVersionInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "settingsUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "settingsUpdatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "settingsUpdatedByFullName": {
            "type": "string",
            "nullable": true
          },
          "versionUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "versionUpdatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "versionUpdatedByFullName": {
            "type": "string",
            "nullable": true
          },
          "deviceUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deviceUpdatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "deviceUpdatedByFullName": {
            "type": "string",
            "nullable": true
          },
          "softwareVersion": {
            "type": "string",
            "nullable": true
          },
          "hardwareVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerDeviceWithSettings": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/ParcelLockerDeviceSettings"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerFilter": {
        "type": "object",
        "properties": {
          "parcelLockerType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelLockerTypeEnum"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "connectionType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectionTypeEnum"
            },
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "isConnected": {
            "$ref": "#/components/schemas/ParcelLockerConnectionFilter"
          },
          "communicationProtocol": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommunicationProtocolTypeEnum"
            },
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerIdentityServiceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerInfoExt": {
        "type": "object",
        "properties": {
          "ownerCompanyId": {
            "type": "string",
            "format": "uuid"
          },
          "ownerCompanyName": {
            "type": "string",
            "nullable": true
          },
          "stackCount": {
            "type": "integer",
            "format": "int32"
          },
          "boxCount": {
            "type": "integer",
            "format": "int32"
          },
          "disabledBoxCount": {
            "type": "integer",
            "format": "int32"
          },
          "freeBoxCount": {
            "type": "integer",
            "format": "int32"
          },
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "boxTypeCount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoxTypeCount"
            },
            "nullable": true
          },
          "lastConnectionAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "virtualMode": {
            "type": "boolean"
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionTypeEnum"
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerType": {
            "$ref": "#/components/schemas/ParcelLockerTypeEnum"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationTypeEnum"
          },
          "communicationProtocol": {
            "$ref": "#/components/schemas/CommunicationProtocolTypeEnum"
          },
          "installationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerList": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "parcelLockers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelLockerInfoExt"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerLocalizationModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "cultureId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerMapModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerMenuType": {
        "enum": [
          "0 - Manufacturer",
          "1 - Admin",
          "2 - Courier"
        ],
        "type": "string"
      },
      "ParcelLockerParcelScannedCodes": {
        "type": "object",
        "properties": {
          "delivered": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelScannedCodesCount"
            },
            "nullable": true
          },
          "received": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelScannedCodesCount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerParcelsCountStatistic": {
        "type": "object",
        "properties": {
          "totalParcelCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageParcelCountPerDay": {
            "type": "integer",
            "format": "int32"
          },
          "canceledParcelCount": {
            "type": "integer",
            "format": "int32"
          },
          "receivedParcelCount": {
            "type": "integer",
            "format": "int32"
          },
          "parcelsActivityPerHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelsActivityPerHours"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerPasswordModel": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "passwordAssignment": {
            "$ref": "#/components/schemas/PasswordAssignmentEnum"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerPowerSourceTelemetryList": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "powerSourceTelemetry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelLockerPowerSourceTelemetryModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerPowerSourceTelemetryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "powerSourceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "powerSourceName": {
            "type": "string",
            "nullable": true
          },
          "weatherId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "currentChargeLevelPercentage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currentVoltage": {
            "type": "number",
            "format": "double"
          },
          "currentTemperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currentHumidity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerPrintedLabelFilterModel": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "labelType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelTypeEnum"
            },
            "nullable": true
          },
          "printStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrintStatusEnum"
            },
            "nullable": true
          },
          "printedAtStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "printedAtEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paperRollReplacementStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paperRollReplacementEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerPrintedLabelGridModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "printerId": {
            "type": "string",
            "format": "uuid"
          },
          "labelType": {
            "$ref": "#/components/schemas/LabelTypeEnum"
          },
          "printStatus": {
            "$ref": "#/components/schemas/PrintStatusEnum"
          },
          "printedAt": {
            "type": "string",
            "format": "date-time"
          },
          "additionalInfo": {
            "type": "string",
            "nullable": true
          },
          "paperRollReplacementDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerPrintedLabelList": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelLockerPrintedLabelGridModel"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerReportBoxParameter": {
        "type": "object",
        "properties": {
          "boxParameter": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerRequestResultEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Successful",
          "2 - NotSuccessful",
          "3 - SuccessfullySent",
          "4 - Error"
        ],
        "type": "string"
      },
      "ParcelLockerSettingKey": {
        "enum": [
          "0 - Unknown",
          "1 - ScreenAdvertisement",
          "2 - HardRebootTime",
          "3 - ServerConnectionMonitoring",
          "4 - Intrusion",
          "5 - ClimateControl",
          "6 - LocksStatusControl"
        ],
        "type": "string"
      },
      "ParcelLockerSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerSimple": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionTypeEnum"
          },
          "isConnected": {
            "type": "boolean"
          },
          "parcelsInProgressCount": {
            "type": "integer",
            "format": "int32"
          },
          "parcelsReturnedCount": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "$ref": "#/components/schemas/AddressWithItems"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerStore": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerStructureTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "structure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoxesStackServiceModel"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerSystemInfoName": {
        "enum": [
          "0 - SystemType",
          "1 - SystemArchitecture",
          "2 - ChromiumVersion",
          "3 - SnapChromiumVersion"
        ],
        "type": "string"
      },
      "ParcelLockerTokenModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "tokenType": {
            "type": "string",
            "nullable": true
          },
          "expiresIn": {
            "type": "integer",
            "format": "int32"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "issued": {
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerTypeEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Grid",
          "2 - OffGrid",
          "3 - Hybrid",
          "4 - Virtual"
        ],
        "type": "string"
      },
      "ParcelLockerUpdateInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "isCurrent": {
            "type": "boolean"
          },
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "destinationVersion": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updateTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTaskModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerVisitModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "page": {
            "$ref": "#/components/schemas/ParcelLockerVisitPageEnum"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userRole": {
            "type": "string",
            "nullable": true
          },
          "userRoleId": {
            "type": "string",
            "format": "uuid"
          },
          "isParcelLockerConnected": {
            "type": "boolean"
          },
          "additionalParameters": {
            "type": "string",
            "nullable": true
          },
          "requestResult": {
            "$ref": "#/components/schemas/ParcelLockerRequestResultEnum"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockerVisitPageEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Manufacturer",
          "2 - Admin",
          "3 - Courier",
          "4 - Client",
          "5 - Server",
          "6 - MobileService",
          "7 - MobileCourier",
          "8 - MobileClient",
          "9 - UserAccessibleBoxes"
        ],
        "type": "string"
      },
      "ParcelLockerWithCountAccessibleBoxesForUserModel": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "countAccessibleBoxes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockersConnectionReport": {
        "type": "object",
        "properties": {
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "isConnected": {
            "type": "string",
            "nullable": true
          },
          "isConnectedDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "offlineTimePercentage": {
            "type": "number",
            "format": "double"
          },
          "longOffline": {
            "type": "boolean"
          },
          "totalBoxesCount": {
            "type": "integer",
            "format": "int32"
          },
          "disabledBoxesCount": {
            "type": "integer",
            "format": "int32"
          },
          "openedBoxesCount": {
            "type": "integer",
            "format": "int32"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelLockersReportModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/AddressWithItems"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationTypeEnum"
          },
          "stackCount": {
            "type": "integer",
            "format": "int32"
          },
          "boxCount": {
            "type": "integer",
            "format": "int32"
          },
          "boxesBySizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelLockerReportBoxParameter"
            },
            "nullable": true
          },
          "installationDate": {
            "type": "string",
            "format": "date-time"
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "ParcelScannedCodesCount": {
        "type": "object",
        "properties": {
          "codeEnteringType": {
            "$ref": "#/components/schemas/CodeEnteringTypeEnum"
          },
          "scannedCodesCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelSimpleExt": {
        "type": "object",
        "properties": {
          "parcelItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelSimpleItem"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "isSyncCRM": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "courierId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "courierName": {
            "type": "string",
            "nullable": true
          },
          "endDeliveryAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryType": {
            "$ref": "#/components/schemas/ParcelDeliveryType"
          }
        },
        "additionalProperties": false
      },
      "ParcelSimpleItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelItemNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ParcelItemStatusEnum"
          },
          "placements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItemPlacement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelSimpleList": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "parcels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelSimpleExt"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParcelStatusesReport": {
        "type": "object",
        "properties": {
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelItemNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "parcelItemStatus": {
            "$ref": "#/components/schemas/ParcelItemStatusEnum"
          }
        },
        "additionalProperties": false
      },
      "ParcelSynchronizationTypeEnum": {
        "enum": [
          "0 - Unknown",
          "1 - BleSyncByMobile",
          "2 - BleSyncByGsm"
        ],
        "type": "string"
      },
      "ParcelsActivityPerHours": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "creationParcelsActivity": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryParcelsActivity": {
            "type": "integer",
            "format": "int32"
          },
          "pickUpParcelsActivity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParcelsSynchronizationHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "messageProviderId": {
            "type": "string",
            "format": "uuid"
          },
          "messageId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "messageProviderName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ParcelsSynchronizationTypeEnum"
          },
          "isSync": {
            "type": "boolean"
          },
          "countOfAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ParcelsSynchronizationTypeEnum": {
        "enum": [
          "0 - CRM",
          "1 - ClientMessage"
        ],
        "type": "string"
      },
      "PasswordAssignmentEnum": {
        "enum": [
          "0 - Anydesk",
          "1 - Root"
        ],
        "type": "string"
      },
      "PhysicalSize": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "depth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PortConfigModel": {
        "type": "object",
        "properties": {
          "portName": {
            "type": "string",
            "nullable": true
          },
          "baudRate": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PowerSourceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "powerSourceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "chemistryTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "nominalVoltage": {
            "type": "number",
            "format": "double"
          },
          "minVoltage": {
            "type": "number",
            "format": "double"
          },
          "maxVoltage": {
            "type": "number",
            "format": "double"
          },
          "nominalCurrent": {
            "type": "number",
            "format": "double"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "formula": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PowerSourceTelemetryFilter": {
        "type": "object",
        "properties": {
          "parcelTerminalId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "powerSourceId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PrintStatusEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Success",
          "2 - Failed"
        ],
        "type": "string"
      },
      "PrinterPaperRoll": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "printerId": {
            "type": "string",
            "format": "uuid"
          },
          "replacementDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProviderBase": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "billingOn": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProximitySensor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "controllerId": {
            "type": "string",
            "format": "uuid"
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "hardwareId": {
            "type": "integer",
            "format": "int32"
          },
          "disable": {
            "type": "boolean"
          },
          "fullnessPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "isDetectedBarrier": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProximitySensorControllerServiceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "slaveId": {
            "type": "integer",
            "format": "int32"
          },
          "portName": {
            "type": "string",
            "nullable": true
          },
          "boundRate": {
            "type": "integer",
            "format": "int32"
          },
          "firmwareVersion": {
            "type": "integer",
            "format": "int32"
          },
          "hardwareVersion": {
            "type": "integer",
            "format": "int32"
          },
          "serialNumber": {
            "type": "integer",
            "format": "int64"
          },
          "softwareVersion": {
            "type": "integer",
            "format": "int32"
          },
          "isWorking": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProximitySensorExtServiceModel": {
        "type": "object",
        "properties": {
          "controller": {
            "$ref": "#/components/schemas/ProximitySensorControllerServiceModel"
          },
          "isDetectedBarrier": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "controllerId": {
            "type": "string",
            "format": "uuid"
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "fullnessPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "hardwareId": {
            "type": "integer",
            "format": "int32"
          },
          "disable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RawParcelLockerSystemInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "$ref": "#/components/schemas/ParcelLockerSystemInfoName"
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReasonType": {
        "enum": [
          "0 - BrokenBox",
          "1 - OpenBox",
          "2 - Clients"
        ],
        "type": "string"
      },
      "Reasons": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ReasonType"
          },
          "isEditable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RefreshApiTokenModel": {
        "type": "object",
        "properties": {
          "externalServiceApiUrl": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionTypeEnum": {
        "enum": [
          "0 - Continent",
          "1 - Country",
          "2 - CountryCode",
          "3 - Region",
          "4 - State",
          "5 - StateDistrict",
          "6 - County",
          "7 - Municipality",
          "8 - City",
          "9 - Town",
          "10 - Village",
          "11 - CityDistrict",
          "12 - District",
          "13 - Borough",
          "14 - Suburb",
          "15 - Subdivision",
          "16 - Hamlet",
          "17 - Croft",
          "18 - IsolatedDwelling",
          "19 - Neighbourhood",
          "20 - Allotments",
          "21 - Quarter",
          "22 - CityBlock",
          "23 - Residental",
          "24 - Farm",
          "25 - Farmyard",
          "26 - Industrial",
          "27 - Commercial",
          "28 - Retail",
          "29 - Road",
          "30 - HouseNumber",
          "31 - HouseName",
          "32 - Postcode",
          "33 - LocationName"
        ],
        "type": "string"
      },
      "ReminderProviderSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reminderSettingId": {
            "type": "string",
            "format": "uuid"
          },
          "messageProviderId": {
            "type": "string",
            "format": "uuid"
          },
          "repeatCount": {
            "type": "integer",
            "format": "int32"
          },
          "repeatInterval": {
            "type": "integer",
            "format": "int32"
          },
          "startAfter": {
            "type": "integer",
            "format": "int32"
          },
          "allowedSendFrom": {
            "type": "string",
            "format": "time"
          },
          "allowedSendTo": {
            "type": "string",
            "format": "time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReminderSettingsWithProviderSettings": {
        "type": "object",
        "properties": {
          "providerSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReminderProviderSettings"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportFilterByCompanyIdAndParcelItemStatusesAndDateModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "parselStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItemStatusEnum"
            },
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReportLogLevelEnum": {
        "enum": [
          "0 - None",
          "1 - Critical",
          "2 - Debug",
          "3 - Error",
          "4 - Information",
          "5 - Trace",
          "6 - Warning"
        ],
        "type": "string"
      },
      "ReportsFilterByCompanyId": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReportsFilterByOwnerCompanyId": {
        "type": "object",
        "properties": {
          "ownerCompanyId": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReportsFilterByParselStatuses": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "parselStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItemStatusEnum"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestResponse": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "boolean"
          },
          "statusCode": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RestoreTaskNameEnum": {
        "enum": [
          "1 - Unzip",
          "2 - DisableServices",
          "3 - StopProcesses",
          "4 - ReplaceFiles",
          "5 - EnableServices",
          "6 - Delete",
          "7 - RestoreBackUpFile"
        ],
        "type": "string"
      },
      "RgbColorModel": {
        "type": "object",
        "properties": {
          "red": {
            "type": "integer",
            "format": "int32"
          },
          "green": {
            "type": "integer",
            "format": "int32"
          },
          "blue": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RotationSideEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Normal",
          "2 - Left",
          "3 - Inverted",
          "4 - Right"
        ],
        "type": "string"
      },
      "RouterInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RouterLogType": {
        "enum": [
          "1 - Events",
          "2 - Troubleshoot"
        ],
        "type": "string"
      },
      "RouterSectionInfoModel": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "menuSectionId": {
            "type": "string",
            "format": "uuid"
          },
          "transferModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouterTransferModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RouterTransferModel": {
        "type": "object",
        "properties": {
          "routerType": {
            "$ref": "#/components/schemas/RouterTypeEnum"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RouterTypeEnum": {
        "enum": [
          "0 - TeltonikaRUT955",
          "1 - TeltonikaRUT956",
          "-1 - Unknown"
        ],
        "type": "string"
      },
      "ScannedCodeTypeEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Cancel",
          "2 - Courier",
          "3 - Customer",
          "4 - ParcelNumber",
          "5 - DropOff",
          "6 - DropOffByBarcode",
          "7 - ChangeBox",
          "8 - ParcelItemNumber",
          "9 - Drop",
          "10 - ParcelItemId"
        ],
        "type": "string"
      },
      "ScannedCodesHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "terminalMode": {
            "$ref": "#/components/schemas/TerminalMode"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "isScanned": {
            "type": "boolean"
          },
          "scannedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isOnline": {
            "type": "boolean"
          },
          "codeEnteringType": {
            "$ref": "#/components/schemas/CodeEnteringTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "ScannedCodesHistoryFilter": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "terminalMode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerminalMode"
            },
            "nullable": true
          },
          "parcelLockerId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "isScanned": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "isOnline": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "codeEnteringTypeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeEnteringTypeEnum"
            },
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ScannedCodesHistoryList": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "scannedCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScannedCodesHistory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SelectBoxSizeOptionEnum": {
        "enum": [
          "0 - Bigger",
          "1 - Smaller",
          "2 - SameOrBigger",
          "3 - SpecificSize",
          "4 - SpecificSizeName"
        ],
        "type": "string"
      },
      "SendMessageModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServerConnectionMonitoringOptionModel": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "onAttempt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServerConnectionMonitoringOptionsModel": {
        "type": "object",
        "properties": {
          "retryTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "routerSimSwitchSettings": {
            "$ref": "#/components/schemas/ServerConnectionMonitoringOptionModel"
          },
          "routerRebootSettings": {
            "$ref": "#/components/schemas/ServerConnectionMonitoringOptionModel"
          }
        },
        "additionalProperties": false
      },
      "SetParcelLockerScenarioModel": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "scenarioId": {
            "type": "string",
            "format": "uuid"
          },
          "applyScenario": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SimCardInfoModel": {
        "type": "object",
        "properties": {
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SiteSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Size": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Statistic": {
        "type": "object",
        "properties": {
          "totalParcelLockers": {
            "type": "integer",
            "format": "int32"
          },
          "activeParcelLockers": {
            "type": "integer",
            "format": "int32"
          },
          "totalInProcessDeliveryParcels": {
            "type": "integer",
            "format": "int32"
          },
          "totalInProcessDeliveryParcelsItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalDeliveredParcels": {
            "type": "integer",
            "format": "int32"
          },
          "totalDeliveredParcelsItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalInWork": {
            "type": "integer",
            "format": "int32"
          },
          "totalInWorkItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatisticOpenCountModel": {
        "type": "object",
        "properties": {
          "openByUser": {
            "type": "integer",
            "format": "int32"
          },
          "openByCourier": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "openMonthByUser": {
            "type": "integer",
            "format": "int32"
          },
          "openMonthByCourier": {
            "type": "integer",
            "format": "int32"
          },
          "totalByMonth": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StatisticParcelCount": {
        "type": "object",
        "properties": {
          "parcelCount": {
            "type": "integer",
            "format": "int32"
          },
          "monthParcelCount": {
            "type": "integer",
            "format": "int32"
          },
          "parcelItemCount": {
            "type": "integer",
            "format": "int32"
          },
          "monthParcelItemCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatisticParcelLockerConnectionCount": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "connectionCount": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "StatisticParcelLockerPerformanceModel": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "efficiencyCoefficient": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fulfillnessCoefficient": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatisticParcelsCountForCompany": {
        "type": "object",
        "properties": {
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "parcelItemsTotalCount": {
            "type": "number",
            "format": "double"
          },
          "receivedItemsCount": {
            "type": "number",
            "format": "double"
          },
          "canceledItemsCount": {
            "type": "number",
            "format": "double"
          },
          "otherItemsCount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "StatisticPartnerParcelReport": {
        "type": "object",
        "properties": {
          "parcelId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "boxNumber": {
            "type": "integer",
            "format": "int32"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "parcelCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "parcelEndAt": {
            "type": "string",
            "format": "date-time"
          },
          "daysStored": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StatisticPrintLabelModel": {
        "type": "object",
        "properties": {
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "printedLabelsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Store": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "address": {
            "$ref": "#/components/schemas/AddressWithItems"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "StoreCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "addressId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "StoreUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "addressId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StoreUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SuspendDeliveryModel": {
        "type": "object",
        "properties": {
          "parcelItemId": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "isSuspendAllItems": {
            "type": "boolean"
          },
          "isOpenBox": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parentTagId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "childTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "explicit": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TeltonikaCredentials": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TerminalMode": {
        "enum": [
          "0 - Unknown",
          "1 - Default",
          "2 - PickUp",
          "3 - Delivery",
          "4 - Courier",
          "5 - CourierPickUp",
          "6 - CourierDelivery",
          "7 - Admin",
          "8 - Manufacturer",
          "9 - DropOff",
          "10 - Parrot",
          "11 - CourierCancel",
          "12 - Setup",
          "13 - UserAccessibleBoxes"
        ],
        "type": "string"
      },
      "TerminalStatus": {
        "enum": [
          "0 - Offline",
          "1 - Online"
        ],
        "type": "string"
      },
      "TestCallbackMessageProviderRequestModel": {
        "type": "object",
        "properties": {
          "authScheme": {
            "type": "string",
            "nullable": true
          },
          "authParameter": {
            "type": "string",
            "nullable": true
          },
          "requestUrl": {
            "type": "string",
            "nullable": true
          },
          "requestBody": {
            "type": "string",
            "nullable": true
          },
          "customHeaderParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValueModel"
            },
            "nullable": true
          },
          "isPost": {
            "type": "boolean"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "messageProviderName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestMessageTemlateModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemePropertyCategory": {
        "enum": [
          "0 - Client",
          "1 - Courier"
        ],
        "type": "string"
      },
      "ThemePropertyGroup": {
        "enum": [
          "0 - Logo",
          "1 - Wreath",
          "2 - Colors",
          "3 - Box",
          "4 - Stack",
          "5 - Input",
          "6 - Buttons",
          "7 - Fonts",
          "8 - FontSize",
          "9 - ContactInfo",
          "10 - Modal"
        ],
        "type": "string"
      },
      "ThemePropertyModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ThemePropertyType"
          },
          "group": {
            "$ref": "#/components/schemas/ThemePropertyGroup"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/ThemePropertyCategory"
          }
        },
        "additionalProperties": false
      },
      "ThemePropertyType": {
        "enum": [
          "0 - Text",
          "1 - Color"
        ],
        "type": "string"
      },
      "TimeIntervalGroup": {
        "enum": [
          "0 - Watchers",
          "1 - DefaultProcess",
          "2 - CancelProcess"
        ],
        "type": "string"
      },
      "TimeIntervals": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "group": {
            "$ref": "#/components/schemas/TimeIntervalGroup"
          }
        },
        "additionalProperties": false
      },
      "TokenModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "tokenType": {
            "type": "string",
            "nullable": true
          },
          "expiresIn": {
            "type": "integer",
            "format": "int32"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "hasChangedPassword": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "issued": {
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TypeMessageEnum": {
        "enum": [
          "0 - Email",
          "1 - SMS",
          "2 - Callbacks",
          "3 - Telegram"
        ],
        "type": "string"
      },
      "TypeSyncFilesEnum": {
        "enum": [
          "0 - Localization",
          "1 - Scenarios",
          "2 - Theme"
        ],
        "type": "string"
      },
      "UpdateIntrusionStatusModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/IntrusionStatus"
          },
          "isFalseAlarm": {
            "type": "boolean",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateParcelInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelNumber": {
            "type": "string",
            "nullable": true
          },
          "customerPhone": {
            "type": "string",
            "nullable": true
          },
          "customerEmail": {
            "type": "string",
            "nullable": true
          },
          "customerFullName": {
            "type": "string",
            "nullable": true
          },
          "parcelItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateParcelLockerModel": {
        "type": "object",
        "properties": {
          "updateId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "scenarioId": {
            "type": "string",
            "format": "uuid"
          },
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "targetVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateParcelLockerSubDevicesModel": {
        "type": "object",
        "properties": {
          "updateId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceId": {
            "type": "string",
            "format": "uuid"
          },
          "deviceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "scenarioId": {
            "type": "string",
            "format": "uuid"
          },
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "targetVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateScenarioModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateTaskModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "updateId": {
            "type": "string",
            "format": "uuid"
          },
          "restoreScenarioId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "taskName": {
            "$ref": "#/components/schemas/UpdateTaskNameEnum"
          },
          "status": {
            "$ref": "#/components/schemas/UpdateTaskStatusEnum"
          },
          "info": {
            "type": "string",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "taskSettings": {
            "$ref": "#/components/schemas/UpdateTaskSettingModel"
          },
          "restoreScenario": {
            "$ref": "#/components/schemas/DeviceRestoreScenarioModel"
          }
        },
        "additionalProperties": false
      },
      "UpdateTaskNameEnum": {
        "enum": [
          "0 - Initial",
          "1 - Download",
          "2 - CheckHashSum",
          "3 - CreateBackUp",
          "4 - Unzip",
          "5 - DisableServices",
          "6 - StopProcesses",
          "7 - ReplaceFiles",
          "8 - EnableServices",
          "9 - WaitApprovalRequest",
          "10 - WaitServerConfirmation",
          "11 - DelayedByTime",
          "12 - Delete",
          "13 - SendHttpRequest"
        ],
        "type": "string"
      },
      "UpdateTaskSettingModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "taskId": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTaskStatusEnum": {
        "enum": [
          "0 - Fail",
          "1 - New",
          "2 - InProgress",
          "3 - Interrupted",
          "4 - Success",
          "5 - Suspended"
        ],
        "type": "string"
      },
      "UpdateWithParcelLockerInfo": {
        "type": "object",
        "properties": {
          "parcelLockerVersion": {
            "type": "string",
            "nullable": true
          },
          "updaterVersion": {
            "type": "string",
            "nullable": true
          },
          "isConnectedUpdater": {
            "type": "boolean"
          },
          "ownerCompanyId": {
            "type": "string",
            "format": "uuid"
          },
          "ownerCompanyName": {
            "type": "string",
            "nullable": true
          },
          "fromVersion": {
            "type": "string",
            "nullable": true
          },
          "toVersion": {
            "type": "string",
            "nullable": true
          },
          "countSendRequest": {
            "type": "integer",
            "format": "int32"
          },
          "updateScenarioName": {
            "type": "string",
            "nullable": true
          },
          "updateTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTaskModel"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "virtualMode": {
            "type": "boolean"
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionTypeEnum"
          },
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerType": {
            "$ref": "#/components/schemas/ParcelLockerTypeEnum"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationTypeEnum"
          },
          "communicationProtocol": {
            "$ref": "#/components/schemas/CommunicationProtocolTypeEnum"
          },
          "installationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserActionsFilter": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "controllerName": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "companyId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "roleId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserBaseModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserBoxAccessBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "UserBoxAccessExtModel": {
        "type": "object",
        "properties": {
          "boxNumber": {
            "type": "integer",
            "format": "int32"
          },
          "userFullName": {
            "type": "string",
            "nullable": true
          },
          "createdByUser": {
            "type": "string",
            "nullable": true
          },
          "updatedByUser": {
            "type": "string",
            "nullable": true
          },
          "isAllowToOpen": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "boxId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "UserParcelLockerAccessBaseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "UserParcelLockerAccessModel": {
        "type": "object",
        "properties": {
          "userFullName": {
            "type": "string",
            "nullable": true
          },
          "parcelLockerName": {
            "type": "string",
            "nullable": true
          },
          "updatedByUser": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parcelLockerId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppIdentityRole"
            },
            "nullable": true
          },
          "roleDescription": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "needConfirmPin": {
            "type": "boolean"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "externalUserId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfileBase": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "externalUserId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSubscriptionGridModel": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "isProviderActive": {
            "type": "boolean"
          },
          "isSubscriptionCreated": {
            "type": "boolean"
          },
          "isSubscriptionDataExist": {
            "type": "boolean"
          },
          "isUserActive": {
            "type": "boolean"
          },
          "messageProviderType": {
            "$ref": "#/components/schemas/TypeMessageEnum"
          },
          "messageProviderId": {
            "type": "string",
            "format": "uuid"
          },
          "subscribeHref": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSubscriptionLevelSettingsModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "messageProviderId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "logType": {
            "$ref": "#/components/schemas/IssueReportTypeEnum"
          },
          "logLevel": {
            "$ref": "#/components/schemas/ReportLogLevelEnum"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserSubscriptionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "messageProviderId": {
            "type": "string",
            "format": "uuid"
          },
          "additionalParameters": {
            "type": "string",
            "nullable": true
          },
          "additionalParametersType": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "VersionInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "hardVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VersionPrefixEnum": {
        "enum": [
          "0 - Unknown",
          "1 - Alpha",
          "2 - Beta",
          "3 - Release"
        ],
        "type": "string"
      },
      "VirtualParcelLockerActionEnum": {
        "enum": [
          "0 - Start",
          "1 - Stop"
        ],
        "type": "string"
      },
      "VisitHistoryFilter": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "page": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelLockerVisitPageEnum"
            },
            "nullable": true
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelLockerRequestResultEnum"
            },
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderField": {
            "type": "string",
            "nullable": true
          },
          "isOrderDesc": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fetch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer eyJhbGciOiJIUz...........................OwJ3cr4oFLwBPl0j_BIjLEE_5RmZSkYA-bzQM4to\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
